<?xml version="1.0"?>
<doc>
<assembly>
<name>
VITAL.BO
</name>
</assembly>
<members>
<member name="M:VITAL.BO.VITAL.User.GetConnectedUser(System.String)">
	<summary>
 Get connected User
 </summary>
	<param name="p_s_login"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:VITAL.BO.VITAL.User">
	<summary>
 User.
 </summary>
</member><member name="T:VITAL.BO.VITAL.Consultation">
	<summary>
 Consultation vétérinaire d'un animal.
 </summary>
</member><member name="T:VITAL.BO.VITAL.Histo_Poids">
	<summary>
 Historique du poids de l'animal.
 </summary>
</member><member name="T:VITAL.BO.VITAL.Histo_Taille">
	<summary>
 Historique de la taille de l'animal.
 </summary>
</member><member name="T:VITAL.BO.VITAL.Vaccination">
	<summary>
 Vaccination d'un animal.
 </summary>
</member><member name="T:VITAL.BO.VITAL.PropriEtaire">
	<summary>
 Propriétaire.
 </summary>
</member><member name="T:VITAL.BO.VITAL.Vaccin">
	<summary>
 Vaccin.
 </summary>
</member><member name="F:VITAL.BO.EN_ModeAcces.Creation">
	<summary>
 Accès en création
 </summary>
</member><member name="F:VITAL.BO.EN_ModeAcces.Modification">
	<summary>
 Accès en modification
 </summary>
</member><member name="T:VITAL.BO.EN_ModeAcces">
	<summary>
 Mode d'accès aux pages
 </summary>
</member><member name="F:VITAL.BO.ModConst.C_S_EXEMPLE">
 Style des éléments inactifs dans les grilles

</member><member name="T:VITAL.BO.VITAL.Carte">
	<summary>
 Carte vitale.
 </summary>
</member><member name="T:VITAL.BO.VITAL.Veterinaire">
	<summary>
 Veterinaire.
 </summary>
</member><member name="T:VITAL.BO.VITAL.Type">
	<summary>
 Typede l'animal.
 </summary>
</member><member name="T:VITAL.BO.VITAL.Medicament">
	<summary>
 Medicament.
 </summary>
</member><member name="T:VITAL.BO.VITAL.Adopter">
	<summary>
 Adopter : Associations etre propriétaire et animal.
 </summary>
</member><member name="T:VITAL.BO.VITAL.Traitrement">
	<summary>
 Traitrement.
 </summary>
</member><member name="P:VITAL.BO.My.Resources.Resources.ResourceManager">
	<summary>
  Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
</summary>
</member><member name="P:VITAL.BO.My.Resources.Resources.Culture">
	<summary>
  Remplace la propriété CurrentUICulture du thread actuel pour toutes
  les recherches de ressources à l'aide de cette classe de ressource fortement typée.
</summary>
</member><member name="T:VITAL.BO.My.Resources.Resources">
	<summary>
  Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
</summary>
</member><member name="T:VITAL.BO.VITAL.Contrat">
	<summary>
 Contrat d'assurance.
 </summary>
</member><member name="T:VITAL.BO.VITAL.Position">
	<summary>
 Position de l'animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Adopter`1.m_b_changes">
	<summary>
 Indique s'il y a eu des changements sur l'objet ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Adopter`1.m_i_iD">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Adopter`1.m_dt_dt_debut">
	<summary>
 Dt_debut.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Adopter`1.m_dt_dt_fin">
	<summary>
 Dt_fin.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Adopter`1.m_i_id_proprietaire">
	<summary>
 Id_proprietaire.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Adopter`1.m_i_id_animal">
	<summary>
 Id_animal.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Raw.Adopter`1.HasChanges">
	<summary>
 Indique si l'objet a subi des modifications ou non
 </summary>
	<value>
	</value>
</member><member name="P:VITAL.BO.VITAL.Raw.Adopter`1.ID">
	<summary>
 ID.
 Champ associé : VTL_ADOPTER.VTL_ADOPTER_ID.
 </summary>
	<value>
 ID.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Adopter`1.Dt_debut">
	<summary>
 Dt_debut.
 Champ associé : VTL_ADOPTER.VTL_ADOPTER_DT_DEBUT.
 </summary>
	<value>
 Dt_debut.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Adopter`1.Dt_fin">
	<summary>
 Dt_fin.
 Champ associé : VTL_ADOPTER.VTL_ADOPTER_DT_FIN.
 </summary>
	<value>
 Dt_fin.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Adopter`1.Id_proprietaire">
	<summary>
 Id_proprietaire.
 Champ associé : VTL_ADOPTER.VTL_ADOPTER_ID_PROPRIETAIRE.
 </summary>
	<value>
 Id_proprietaire.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Adopter`1.Id_animal">
	<summary>
 Id_animal.
 Champ associé : VTL_ADOPTER.VTL_ADOPTER_ID_ANIMAL.
 </summary>
	<value>
 Id_animal.
 </value>
</member><member name="F:VITAL.BO.VITAL.Raw.Adopter`1.HasHisto">
	<summary>
 Indique si l'objet a un historique ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Adopter`1.HasCache">
	<summary>
 Indique si l'objet utilise le cache ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Adopter`1.TableName">
	<summary>
 Nom de la table associée à la classe.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Raw.Adopter`1.CloneAsNew(System.Boolean)">
	<summary> Clone l'objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.Adopter`1.CopyTo(`0,System.Boolean)">
	<summary> Copie objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.Adopter`1.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.Adopter`1.ToRow(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.Adopter`1.Diff(VITAL.BO.VITAL.Raw.Adopter{`0})">
	<summary>
 Permet de détecter toutes les différences entre 2 objets
 </summary>
	<param name="p_o_object">Objet de la classe Adopter.</param>
</member><member name="T:VITAL.BO.VITAL.Raw.Adopter`1">
	<summary>
 Adopter : Associations etre propriétaire et animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Animal`1.m_b_changes">
	<summary>
 Indique s'il y a eu des changements sur l'objet ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Animal`1.m_i_iD">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Animal`1.m_s_nom">
	<summary>
 Nom.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Animal`1.m_s_num_puce">
	<summary>
 Num_puce.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Animal`1.m_dt_dt_naissance">
	<summary>
 Dt_naissance.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Animal`1.m_dt_dt_deces">
	<summary>
 Dt_deces.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Animal`1.m_i_id_race">
	<summary>
 Id_race.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Animal`1.m_i_id_carte">
	<summary>
 Id_carte.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Animal`1.m_i_id_type">
	<summary>
 Id_type.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Raw.Animal`1.HasChanges">
	<summary>
 Indique si l'objet a subi des modifications ou non
 </summary>
	<value>
	</value>
</member><member name="P:VITAL.BO.VITAL.Raw.Animal`1.ID">
	<summary>
 ID.
 Champ associé : VTL_ANIMAL.VTL_ANIMAL_ID.
 </summary>
	<value>
 ID.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Animal`1.Nom">
	<summary>
 Nom.
 Champ associé : VTL_ANIMAL.VTL_ANIMAL_NOM.
 </summary>
	<value>
 Nom.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Animal`1.Num_puce">
	<summary>
 Num_puce.
 Champ associé : VTL_ANIMAL.VTL_ANIMAL_NUM_PUCE.
 </summary>
	<value>
 Num_puce.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Animal`1.Dt_naissance">
	<summary>
 Dt_naissance.
 Champ associé : VTL_ANIMAL.VTL_ANIMAL_DT_NAISSANCE.
 </summary>
	<value>
 Dt_naissance.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Animal`1.Dt_deces">
	<summary>
 Dt_deces.
 Champ associé : VTL_ANIMAL.VTL_ANIMAL_DT_DECES.
 </summary>
	<value>
 Dt_deces.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Animal`1.Id_race">
	<summary>
 Id_race.
 Champ associé : VTL_ANIMAL.VTL_ANIMAL_ID_RACE.
 </summary>
	<value>
 Id_race.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Animal`1.Id_carte">
	<summary>
 Id_carte.
 Champ associé : VTL_ANIMAL.VTL_ANIMAL_ID_CARTE.
 </summary>
	<value>
 Id_carte.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Animal`1.Id_type">
	<summary>
 Id_type.
 Champ associé : VTL_ANIMAL.VTL_ANIMAL_ID_TYPE.
 </summary>
	<value>
 Id_type.
 </value>
</member><member name="F:VITAL.BO.VITAL.Raw.Animal`1.HasHisto">
	<summary>
 Indique si l'objet a un historique ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Animal`1.HasCache">
	<summary>
 Indique si l'objet utilise le cache ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Animal`1.TableName">
	<summary>
 Nom de la table associée à la classe.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Raw.Animal`1.CloneAsNew(System.Boolean)">
	<summary> Clone l'objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.Animal`1.CopyTo(`0,System.Boolean)">
	<summary> Copie objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.Animal`1.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.Animal`1.ToRow(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.Animal`1.Diff(VITAL.BO.VITAL.Raw.Animal{`0})">
	<summary>
 Permet de détecter toutes les différences entre 2 objets
 </summary>
	<param name="p_o_object">Objet de la classe Animal.</param>
</member><member name="T:VITAL.BO.VITAL.Raw.Animal`1">
	<summary>
 Animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Assurance`1.m_b_changes">
	<summary>
 Indique s'il y a eu des changements sur l'objet ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Assurance`1.m_i_iD">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Assurance`1.m_s_nom">
	<summary>
 Nom.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Assurance`1.m_s_siret">
	<summary>
 Siret.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Raw.Assurance`1.HasChanges">
	<summary>
 Indique si l'objet a subi des modifications ou non
 </summary>
	<value>
	</value>
</member><member name="P:VITAL.BO.VITAL.Raw.Assurance`1.ID">
	<summary>
 ID.
 Champ associé : VTL_ASSURANCE.VTL_ASSURANCE_ID.
 </summary>
	<value>
 ID.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Assurance`1.Nom">
	<summary>
 Nom.
 Champ associé : VTL_ASSURANCE.VTL_ASSURANCE_NOM.
 </summary>
	<value>
 Nom.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Assurance`1.Siret">
	<summary>
 Siret.
 Champ associé : VTL_ASSURANCE.VTL_ASSURANCE_SIRET.
 </summary>
	<value>
 Siret.
 </value>
</member><member name="F:VITAL.BO.VITAL.Raw.Assurance`1.HasHisto">
	<summary>
 Indique si l'objet a un historique ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Assurance`1.HasCache">
	<summary>
 Indique si l'objet utilise le cache ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Assurance`1.TableName">
	<summary>
 Nom de la table associée à la classe.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Raw.Assurance`1.CloneAsNew(System.Boolean)">
	<summary> Clone l'objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.Assurance`1.CopyTo(`0,System.Boolean)">
	<summary> Copie objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.Assurance`1.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.Assurance`1.ToRow(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.Assurance`1.Diff(VITAL.BO.VITAL.Raw.Assurance{`0})">
	<summary>
 Permet de détecter toutes les différences entre 2 objets
 </summary>
	<param name="p_o_object">Objet de la classe Assurance.</param>
</member><member name="T:VITAL.BO.VITAL.Raw.Assurance`1">
	<summary>
 Assurance.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Carte`1.m_b_changes">
	<summary>
 Indique s'il y a eu des changements sur l'objet ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Carte`1.m_i_iD">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Carte`1.m_s_numero">
	<summary>
 Numero.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Raw.Carte`1.HasChanges">
	<summary>
 Indique si l'objet a subi des modifications ou non
 </summary>
	<value>
	</value>
</member><member name="P:VITAL.BO.VITAL.Raw.Carte`1.ID">
	<summary>
 ID.
 Champ associé : VTL_CARTE.VTL_CARTE_ID.
 </summary>
	<value>
 ID.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Carte`1.Numero">
	<summary>
 Numero.
 Champ associé : VTL_CARTE.VTL_CARTE_NUMERO.
 </summary>
	<value>
 Numero.
 </value>
</member><member name="F:VITAL.BO.VITAL.Raw.Carte`1.HasHisto">
	<summary>
 Indique si l'objet a un historique ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Carte`1.HasCache">
	<summary>
 Indique si l'objet utilise le cache ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Carte`1.TableName">
	<summary>
 Nom de la table associée à la classe.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Raw.Carte`1.CloneAsNew(System.Boolean)">
	<summary> Clone l'objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.Carte`1.CopyTo(`0,System.Boolean)">
	<summary> Copie objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.Carte`1.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.Carte`1.ToRow(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.Carte`1.Diff(VITAL.BO.VITAL.Raw.Carte{`0})">
	<summary>
 Permet de détecter toutes les différences entre 2 objets
 </summary>
	<param name="p_o_object">Objet de la classe Carte.</param>
</member><member name="T:VITAL.BO.VITAL.Raw.Carte`1">
	<summary>
 Carte vitale.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Consultation`1.m_b_changes">
	<summary>
 Indique s'il y a eu des changements sur l'objet ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Consultation`1.m_i_iD">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Consultation`1.m_dt_dt_consultation">
	<summary>
 Dt_consultation.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Consultation`1.m_d_montant">
	<summary>
 Montant.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Consultation`1.m_s_commentaire">
	<summary>
 Commentaire.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Consultation`1.m_i_id_veterinaire">
	<summary>
 Id_veterinaire.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Consultation`1.m_i_id_animal">
	<summary>
 Id_animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Consultation`1.m_i_id_proprietaire">
	<summary>
 Id_proprietaire.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Raw.Consultation`1.HasChanges">
	<summary>
 Indique si l'objet a subi des modifications ou non
 </summary>
	<value>
	</value>
</member><member name="P:VITAL.BO.VITAL.Raw.Consultation`1.ID">
	<summary>
 ID.
 Champ associé : VTL_CONSULTATION.VTL_CONSULTATION_ID.
 </summary>
	<value>
 ID.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Consultation`1.Dt_consultation">
	<summary>
 Dt_consultation.
 Champ associé : VTL_CONSULTATION.VTL_CONSULTATION_DT_CONSULTATION.
 </summary>
	<value>
 Dt_consultation.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Consultation`1.Montant">
	<summary>
 Montant.
 Champ associé : VTL_CONSULTATION.VTL_CONSULTATION_MONTANT.
 </summary>
	<value>
 Montant.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Consultation`1.Commentaire">
	<summary>
 Commentaire.
 Champ associé : VTL_CONSULTATION.VTL_CONSULTATION_COMMENTAIRE.
 </summary>
	<value>
 Commentaire.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Consultation`1.Id_veterinaire">
	<summary>
 Id_veterinaire.
 Champ associé : VTL_CONSULTATION.VTL_CONSULTATION_ID_VETERINAIRE.
 </summary>
	<value>
 Id_veterinaire.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Consultation`1.Id_animal">
	<summary>
 Id_animal.
 Champ associé : VTL_CONSULTATION.VTL_CONSULTATION_L.
 </summary>
	<value>
 Id_animal.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Consultation`1.Id_proprietaire">
	<summary>
 Id_proprietaire.
 Champ associé : VTL_CONSULTATION.VTL_CONSULTATION_ID_PROPRIETAIRE.
 </summary>
	<value>
 Id_proprietaire.
 </value>
</member><member name="F:VITAL.BO.VITAL.Raw.Consultation`1.HasHisto">
	<summary>
 Indique si l'objet a un historique ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Consultation`1.HasCache">
	<summary>
 Indique si l'objet utilise le cache ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Consultation`1.TableName">
	<summary>
 Nom de la table associée à la classe.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Raw.Consultation`1.CloneAsNew(System.Boolean)">
	<summary> Clone l'objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.Consultation`1.CopyTo(`0,System.Boolean)">
	<summary> Copie objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.Consultation`1.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.Consultation`1.ToRow(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.Consultation`1.Diff(VITAL.BO.VITAL.Raw.Consultation{`0})">
	<summary>
 Permet de détecter toutes les différences entre 2 objets
 </summary>
	<param name="p_o_object">Objet de la classe Consultation.</param>
</member><member name="T:VITAL.BO.VITAL.Raw.Consultation`1">
	<summary>
 Consultation vétérinaire d'un animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Contrat`1.m_b_changes">
	<summary>
 Indique s'il y a eu des changements sur l'objet ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Contrat`1.m_i_iD">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Contrat`1.m_s_num_contrat">
	<summary>
 Num_contrat.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Contrat`1.m_dt_dt_debut">
	<summary>
 Dt_debut.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Contrat`1.m_dt_dt_fin">
	<summary>
 Dt_fin.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Contrat`1.m_i_id_animal">
	<summary>
 Id_animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Contrat`1.m_i_id_proprietaire">
	<summary>
 Id_proprietaire.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Contrat`1.m_i_id_assurance">
	<summary>
 Id_assurance.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Raw.Contrat`1.HasChanges">
	<summary>
 Indique si l'objet a subi des modifications ou non
 </summary>
	<value>
	</value>
</member><member name="P:VITAL.BO.VITAL.Raw.Contrat`1.ID">
	<summary>
 ID.
 Champ associé : VTL_CONTRAT.VTL_CONTRAT_ID.
 </summary>
	<value>
 ID.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Contrat`1.Num_contrat">
	<summary>
 Num_contrat.
 Champ associé : VTL_CONTRAT.VTL_CONTRAT_NUM_CONTRAT.
 </summary>
	<value>
 Num_contrat.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Contrat`1.Dt_debut">
	<summary>
 Dt_debut.
 Champ associé : VTL_CONTRAT.VTL_CONTRAT_DT_DEBUT.
 </summary>
	<value>
 Dt_debut.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Contrat`1.Dt_fin">
	<summary>
 Dt_fin.
 Champ associé : VTL_CONTRAT.VTL_CONTRAT_DT_FIN.
 </summary>
	<value>
 Dt_fin.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Contrat`1.Id_animal">
	<summary>
 Id_animal.
 Champ associé : VTL_CONTRAT.VTL_CONTRAT_ID_ANIMAL.
 </summary>
	<value>
 Id_animal.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Contrat`1.Id_proprietaire">
	<summary>
 Id_proprietaire.
 Champ associé : VTL_CONTRAT.VTL_CONTRAT_ID_PROPRIETAIRE.
 </summary>
	<value>
 Id_proprietaire.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Contrat`1.Id_assurance">
	<summary>
 Id_assurance.
 Champ associé : VTL_CONTRAT.VTL_CONTRAT_ID_ASSURANCE.
 </summary>
	<value>
 Id_assurance.
 </value>
</member><member name="F:VITAL.BO.VITAL.Raw.Contrat`1.HasHisto">
	<summary>
 Indique si l'objet a un historique ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Contrat`1.HasCache">
	<summary>
 Indique si l'objet utilise le cache ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Contrat`1.TableName">
	<summary>
 Nom de la table associée à la classe.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Raw.Contrat`1.CloneAsNew(System.Boolean)">
	<summary> Clone l'objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.Contrat`1.CopyTo(`0,System.Boolean)">
	<summary> Copie objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.Contrat`1.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.Contrat`1.ToRow(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.Contrat`1.Diff(VITAL.BO.VITAL.Raw.Contrat{`0})">
	<summary>
 Permet de détecter toutes les différences entre 2 objets
 </summary>
	<param name="p_o_object">Objet de la classe Contrat.</param>
</member><member name="T:VITAL.BO.VITAL.Raw.Contrat`1">
	<summary>
 Contrat d'assurance.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Histo_Poids`1.m_b_changes">
	<summary>
 Indique s'il y a eu des changements sur l'objet ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Histo_Poids`1.m_i_iD">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Histo_Poids`1.m_dt_dt_histo">
	<summary>
 Dt_histo.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Histo_Poids`1.m_d_poids">
	<summary>
 Poids.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Histo_Poids`1.m_i_id_animal">
	<summary>
 Id_animal.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Raw.Histo_Poids`1.HasChanges">
	<summary>
 Indique si l'objet a subi des modifications ou non
 </summary>
	<value>
	</value>
</member><member name="P:VITAL.BO.VITAL.Raw.Histo_Poids`1.ID">
	<summary>
 ID.
 Champ associé : VTL_HISTO_POIDS.VTL_HISTO_POIDS_ID.
 </summary>
	<value>
 ID.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Histo_Poids`1.Dt_histo">
	<summary>
 Dt_histo.
 Champ associé : VTL_HISTO_POIDS.VTL_HISTO_POIDS_DT_HISTO.
 </summary>
	<value>
 Dt_histo.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Histo_Poids`1.Poids">
	<summary>
 Poids.
 Champ associé : VTL_HISTO_POIDS.VTL_HISTO_POIDS_POIDS.
 </summary>
	<value>
 Poids.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Histo_Poids`1.Id_animal">
	<summary>
 Id_animal.
 Champ associé : VTL_HISTO_POIDS.VTL_HISTO_POIDS_ID_ANIMAL.
 </summary>
	<value>
 Id_animal.
 </value>
</member><member name="F:VITAL.BO.VITAL.Raw.Histo_Poids`1.HasHisto">
	<summary>
 Indique si l'objet a un historique ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Histo_Poids`1.HasCache">
	<summary>
 Indique si l'objet utilise le cache ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Histo_Poids`1.TableName">
	<summary>
 Nom de la table associée à la classe.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Raw.Histo_Poids`1.CloneAsNew(System.Boolean)">
	<summary> Clone l'objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.Histo_Poids`1.CopyTo(`0,System.Boolean)">
	<summary> Copie objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.Histo_Poids`1.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.Histo_Poids`1.ToRow(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.Histo_Poids`1.Diff(VITAL.BO.VITAL.Raw.Histo_Poids{`0})">
	<summary>
 Permet de détecter toutes les différences entre 2 objets
 </summary>
	<param name="p_o_object">Objet de la classe Histo_Poids.</param>
</member><member name="T:VITAL.BO.VITAL.Raw.Histo_Poids`1">
	<summary>
 Historique du poids de l'animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Histo_Taille`1.m_b_changes">
	<summary>
 Indique s'il y a eu des changements sur l'objet ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Histo_Taille`1.m_i_iD">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Histo_Taille`1.m_dt_dt_histo">
	<summary>
 Dt_histo.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Histo_Taille`1.m_d_taille">
	<summary>
 Taille.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Histo_Taille`1.m_i_id_animal">
	<summary>
 Id_animal.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Raw.Histo_Taille`1.HasChanges">
	<summary>
 Indique si l'objet a subi des modifications ou non
 </summary>
	<value>
	</value>
</member><member name="P:VITAL.BO.VITAL.Raw.Histo_Taille`1.ID">
	<summary>
 ID.
 Champ associé : VTL_HISTO_TAILLE.VTL_HISTO_TAILLE_ID.
 </summary>
	<value>
 ID.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Histo_Taille`1.Dt_histo">
	<summary>
 Dt_histo.
 Champ associé : VTL_HISTO_TAILLE.VTL_HISTO_TAILLE_DT_HISTO.
 </summary>
	<value>
 Dt_histo.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Histo_Taille`1.Taille">
	<summary>
 Taille.
 Champ associé : VTL_HISTO_TAILLE.VTL_HISTO_TAILLE_TAILLE.
 </summary>
	<value>
 Taille.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Histo_Taille`1.Id_animal">
	<summary>
 Id_animal.
 Champ associé : VTL_HISTO_TAILLE.VTL_HISTO_TAILLE_ID_ANIMAL.
 </summary>
	<value>
 Id_animal.
 </value>
</member><member name="F:VITAL.BO.VITAL.Raw.Histo_Taille`1.HasHisto">
	<summary>
 Indique si l'objet a un historique ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Histo_Taille`1.HasCache">
	<summary>
 Indique si l'objet utilise le cache ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Histo_Taille`1.TableName">
	<summary>
 Nom de la table associée à la classe.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Raw.Histo_Taille`1.CloneAsNew(System.Boolean)">
	<summary> Clone l'objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.Histo_Taille`1.CopyTo(`0,System.Boolean)">
	<summary> Copie objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.Histo_Taille`1.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.Histo_Taille`1.ToRow(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.Histo_Taille`1.Diff(VITAL.BO.VITAL.Raw.Histo_Taille{`0})">
	<summary>
 Permet de détecter toutes les différences entre 2 objets
 </summary>
	<param name="p_o_object">Objet de la classe Histo_Taille.</param>
</member><member name="T:VITAL.BO.VITAL.Raw.Histo_Taille`1">
	<summary>
 Historique de la taille de l'animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Medicament`1.m_b_changes">
	<summary>
 Indique s'il y a eu des changements sur l'objet ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Medicament`1.m_i_iD">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Medicament`1.m_s_libelle">
	<summary>
 Libelle.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Medicament`1.m_s_dosage">
	<summary>
 Dosage.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Medicament`1.m_i_duree_moyenne_jour">
	<summary>
 Duree_moyenne_jour.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Raw.Medicament`1.HasChanges">
	<summary>
 Indique si l'objet a subi des modifications ou non
 </summary>
	<value>
	</value>
</member><member name="P:VITAL.BO.VITAL.Raw.Medicament`1.ID">
	<summary>
 ID.
 Champ associé : VTL_MEDICAMENT.VTL_MEDICAMENT_ID.
 </summary>
	<value>
 ID.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Medicament`1.Libelle">
	<summary>
 Libelle.
 Champ associé : VTL_MEDICAMENT.VTL_MEDICAMENT_LIBELLE.
 </summary>
	<value>
 Libelle.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Medicament`1.Dosage">
	<summary>
 Dosage.
 Champ associé : VTL_MEDICAMENT.VTL_MEDICAMENT_DOSAGE.
 </summary>
	<value>
 Dosage.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Medicament`1.Duree_moyenne_jour">
	<summary>
 Duree_moyenne_jour.
 Champ associé : VTL_MEDICAMENT.VTL_MEDICAMENT_DUREE_MOYENNE_JOUR.
 </summary>
	<value>
 Duree_moyenne_jour.
 </value>
</member><member name="F:VITAL.BO.VITAL.Raw.Medicament`1.HasHisto">
	<summary>
 Indique si l'objet a un historique ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Medicament`1.HasCache">
	<summary>
 Indique si l'objet utilise le cache ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Medicament`1.TableName">
	<summary>
 Nom de la table associée à la classe.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Raw.Medicament`1.CloneAsNew(System.Boolean)">
	<summary> Clone l'objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.Medicament`1.CopyTo(`0,System.Boolean)">
	<summary> Copie objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.Medicament`1.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.Medicament`1.ToRow(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.Medicament`1.Diff(VITAL.BO.VITAL.Raw.Medicament{`0})">
	<summary>
 Permet de détecter toutes les différences entre 2 objets
 </summary>
	<param name="p_o_object">Objet de la classe Medicament.</param>
</member><member name="T:VITAL.BO.VITAL.Raw.Medicament`1">
	<summary>
 Medicament.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Position`1.m_b_changes">
	<summary>
 Indique s'il y a eu des changements sur l'objet ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Position`1.m_i_iD">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Position`1.m_dt_dt_position">
	<summary>
 Dt_position.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Position`1.m_s_coord_lat">
	<summary>
 Coord_lat.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Position`1.m_s_coord_long">
	<summary>
 Coord_long.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Position`1.m_b_top_courante">
	<summary>
 Top_courante.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Position`1.m_i_id_animal">
	<summary>
 Id_animal.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Raw.Position`1.HasChanges">
	<summary>
 Indique si l'objet a subi des modifications ou non
 </summary>
	<value>
	</value>
</member><member name="P:VITAL.BO.VITAL.Raw.Position`1.ID">
	<summary>
 ID.
 Champ associé : VTL_POSITION.VTL_POSITION_ID.
 </summary>
	<value>
 ID.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Position`1.Dt_position">
	<summary>
 Dt_position.
 Champ associé : VTL_POSITION.VTL_POSITION_DT_POSITION.
 </summary>
	<value>
 Dt_position.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Position`1.Coord_lat">
	<summary>
 Coord_lat.
 Champ associé : VTL_POSITION.VTL_POSITION_COORD_LAT.
 </summary>
	<value>
 Coord_lat.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Position`1.Coord_long">
	<summary>
 Coord_long.
 Champ associé : VTL_POSITION.VTL_POSITION_COORD_LONG.
 </summary>
	<value>
 Coord_long.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Position`1.Top_courante">
	<summary>
 Top_courante.
 Champ associé : VTL_POSITION.VTL_POSITION_TOP_COURANTE.
 </summary>
	<value>
 Top_courante.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Position`1.Id_animal">
	<summary>
 Id_animal.
 Champ associé : VTL_POSITION.VTL_POSITION_ID_ANIMAL.
 </summary>
	<value>
 Id_animal.
 </value>
</member><member name="F:VITAL.BO.VITAL.Raw.Position`1.HasHisto">
	<summary>
 Indique si l'objet a un historique ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Position`1.HasCache">
	<summary>
 Indique si l'objet utilise le cache ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Position`1.TableName">
	<summary>
 Nom de la table associée à la classe.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Raw.Position`1.CloneAsNew(System.Boolean)">
	<summary> Clone l'objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.Position`1.CopyTo(`0,System.Boolean)">
	<summary> Copie objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.Position`1.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.Position`1.ToRow(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.Position`1.Diff(VITAL.BO.VITAL.Raw.Position{`0})">
	<summary>
 Permet de détecter toutes les différences entre 2 objets
 </summary>
	<param name="p_o_object">Objet de la classe Position.</param>
</member><member name="T:VITAL.BO.VITAL.Raw.Position`1">
	<summary>
 Position de l'animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.PropriEtaire`1.m_b_changes">
	<summary>
 Indique s'il y a eu des changements sur l'objet ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.PropriEtaire`1.m_i_iD">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.PropriEtaire`1.m_s_nom">
	<summary>
 Nom.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.PropriEtaire`1.m_s_prenom">
	<summary>
 Prenom.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Raw.PropriEtaire`1.HasChanges">
	<summary>
 Indique si l'objet a subi des modifications ou non
 </summary>
	<value>
	</value>
</member><member name="P:VITAL.BO.VITAL.Raw.PropriEtaire`1.ID">
	<summary>
 ID.
 Champ associé : VTL_PROPRIETAIRE.VTL_PROPRIETAIRE_ID.
 </summary>
	<value>
 ID.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.PropriEtaire`1.Nom">
	<summary>
 Nom.
 Champ associé : VTL_PROPRIETAIRE.VTL_PROPRIETAIRE_NOM.
 </summary>
	<value>
 Nom.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.PropriEtaire`1.Prenom">
	<summary>
 Prenom.
 Champ associé : VTL_PROPRIETAIRE.VTL_PROPRIETAIRE_PRENOM.
 </summary>
	<value>
 Prenom.
 </value>
</member><member name="F:VITAL.BO.VITAL.Raw.PropriEtaire`1.HasHisto">
	<summary>
 Indique si l'objet a un historique ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.PropriEtaire`1.HasCache">
	<summary>
 Indique si l'objet utilise le cache ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.PropriEtaire`1.TableName">
	<summary>
 Nom de la table associée à la classe.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Raw.PropriEtaire`1.CloneAsNew(System.Boolean)">
	<summary> Clone l'objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.PropriEtaire`1.CopyTo(`0,System.Boolean)">
	<summary> Copie objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.PropriEtaire`1.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.PropriEtaire`1.ToRow(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.PropriEtaire`1.Diff(VITAL.BO.VITAL.Raw.PropriEtaire{`0})">
	<summary>
 Permet de détecter toutes les différences entre 2 objets
 </summary>
	<param name="p_o_object">Objet de la classe PropriEtaire.</param>
</member><member name="T:VITAL.BO.VITAL.Raw.PropriEtaire`1">
	<summary>
 Propriétaire.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Race`1.m_b_changes">
	<summary>
 Indique s'il y a eu des changements sur l'objet ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Race`1.m_i_iD">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Race`1.m_s_nom">
	<summary>
 Nom.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Raw.Race`1.HasChanges">
	<summary>
 Indique si l'objet a subi des modifications ou non
 </summary>
	<value>
	</value>
</member><member name="P:VITAL.BO.VITAL.Raw.Race`1.ID">
	<summary>
 ID.
 Champ associé : VTL_RACE.VTL_RACE_ID.
 </summary>
	<value>
 ID.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Race`1.Nom">
	<summary>
 Nom.
 Champ associé : VTL_RACE.VTL_RACE_NOM.
 </summary>
	<value>
 Nom.
 </value>
</member><member name="F:VITAL.BO.VITAL.Raw.Race`1.HasHisto">
	<summary>
 Indique si l'objet a un historique ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Race`1.HasCache">
	<summary>
 Indique si l'objet utilise le cache ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Race`1.TableName">
	<summary>
 Nom de la table associée à la classe.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Raw.Race`1.CloneAsNew(System.Boolean)">
	<summary> Clone l'objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.Race`1.CopyTo(`0,System.Boolean)">
	<summary> Copie objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.Race`1.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.Race`1.ToRow(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.Race`1.Diff(VITAL.BO.VITAL.Raw.Race{`0})">
	<summary>
 Permet de détecter toutes les différences entre 2 objets
 </summary>
	<param name="p_o_object">Objet de la classe Race.</param>
</member><member name="T:VITAL.BO.VITAL.Raw.Race`1">
	<summary>
 Race de l'animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Traitement_medicament`1.m_b_changes">
	<summary>
 Indique s'il y a eu des changements sur l'objet ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Traitement_medicament`1.m_i_iD">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Traitement_medicament`1.m_i_id_traitement">
	<summary>
 Id_traitement.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Traitement_medicament`1.m_i_id_medicament">
	<summary>
 Id_medicament.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Traitement_medicament`1.m_i_posologie">
	<summary>
 Posologie.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Traitement_medicament`1.m_i_duree_jour">
	<summary>
 Duree_jour.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Raw.Traitement_medicament`1.HasChanges">
	<summary>
 Indique si l'objet a subi des modifications ou non
 </summary>
	<value>
	</value>
</member><member name="P:VITAL.BO.VITAL.Raw.Traitement_medicament`1.ID">
	<summary>
 ID.
 Champ associé : VTL_TRAITEMENT_MEDICAMENT.VTL_TRAITEMENT_MEDICAMENT_ID.
 </summary>
	<value>
 ID.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Traitement_medicament`1.Id_traitement">
	<summary>
 Id_traitement.
 Champ associé : VTL_TRAITEMENT_MEDICAMENT.VTL_TRAITEMENT_MEDICAMENT_ID_TRAITEMENT.
 </summary>
	<value>
 Id_traitement.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Traitement_medicament`1.Id_medicament">
	<summary>
 Id_medicament.
 Champ associé : VTL_TRAITEMENT_MEDICAMENT.VTL_TRAITEMENT_MEDICAMENT_ID_MEDICAMENT.
 </summary>
	<value>
 Id_medicament.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Traitement_medicament`1.Posologie">
	<summary>
 Posologie.
 Champ associé : VTL_TRAITEMENT_MEDICAMENT.VTL_TRAITEMENT_MEDICAMENT_POSOLOGIE.
 </summary>
	<value>
 Posologie.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Traitement_medicament`1.Duree_jour">
	<summary>
 Duree_jour.
 Champ associé : VTL_TRAITEMENT_MEDICAMENT.VTL_TRAITEMENT_MEDICAMENT_DUREE_JOUR.
 </summary>
	<value>
 Duree_jour.
 </value>
</member><member name="F:VITAL.BO.VITAL.Raw.Traitement_medicament`1.HasHisto">
	<summary>
 Indique si l'objet a un historique ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Traitement_medicament`1.HasCache">
	<summary>
 Indique si l'objet utilise le cache ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Traitement_medicament`1.TableName">
	<summary>
 Nom de la table associée à la classe.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Raw.Traitement_medicament`1.CloneAsNew(System.Boolean)">
	<summary> Clone l'objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.Traitement_medicament`1.CopyTo(`0,System.Boolean)">
	<summary> Copie objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.Traitement_medicament`1.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.Traitement_medicament`1.ToRow(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.Traitement_medicament`1.Diff(VITAL.BO.VITAL.Raw.Traitement_medicament{`0})">
	<summary>
 Permet de détecter toutes les différences entre 2 objets
 </summary>
	<param name="p_o_object">Objet de la classe Traitement_medicament.</param>
</member><member name="T:VITAL.BO.VITAL.Raw.Traitement_medicament`1">
	<summary>
 Liste des médicaments compris dans un traitement.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Traitrement`1.m_b_changes">
	<summary>
 Indique s'il y a eu des changements sur l'objet ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Traitrement`1.m_i_iD">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Traitrement`1.m_i_duree_jour">
	<summary>
 Duree_jour.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Traitrement`1.m_dt_dt_debut">
	<summary>
 Dt_debut.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Raw.Traitrement`1.HasChanges">
	<summary>
 Indique si l'objet a subi des modifications ou non
 </summary>
	<value>
	</value>
</member><member name="P:VITAL.BO.VITAL.Raw.Traitrement`1.ID">
	<summary>
 ID.
 Champ associé : VTL_TRAITREMENT.VTL_TRAITREMENT_ID.
 </summary>
	<value>
 ID.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Traitrement`1.Duree_jour">
	<summary>
 Duree_jour.
 Champ associé : VTL_TRAITREMENT.VTL_TRAITREMENT_DUREE_JOUR.
 </summary>
	<value>
 Duree_jour.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Traitrement`1.Dt_debut">
	<summary>
 Dt_debut.
 Champ associé : VTL_TRAITREMENT.VTL_TRAITREMENT_DT_DEBUT.
 </summary>
	<value>
 Dt_debut.
 </value>
</member><member name="F:VITAL.BO.VITAL.Raw.Traitrement`1.HasHisto">
	<summary>
 Indique si l'objet a un historique ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Traitrement`1.HasCache">
	<summary>
 Indique si l'objet utilise le cache ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Traitrement`1.TableName">
	<summary>
 Nom de la table associée à la classe.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Raw.Traitrement`1.CloneAsNew(System.Boolean)">
	<summary> Clone l'objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.Traitrement`1.CopyTo(`0,System.Boolean)">
	<summary> Copie objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.Traitrement`1.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.Traitrement`1.ToRow(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.Traitrement`1.Diff(VITAL.BO.VITAL.Raw.Traitrement{`0})">
	<summary>
 Permet de détecter toutes les différences entre 2 objets
 </summary>
	<param name="p_o_object">Objet de la classe Traitrement.</param>
</member><member name="T:VITAL.BO.VITAL.Raw.Traitrement`1">
	<summary>
 Traitrement.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Type`1.m_b_changes">
	<summary>
 Indique s'il y a eu des changements sur l'objet ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Type`1.m_i_iD">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Type`1.m_s_libelle">
	<summary>
 Libelle.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Raw.Type`1.HasChanges">
	<summary>
 Indique si l'objet a subi des modifications ou non
 </summary>
	<value>
	</value>
</member><member name="P:VITAL.BO.VITAL.Raw.Type`1.ID">
	<summary>
 ID.
 Champ associé : VTL_TYPE.VTL_TYPE_ID.
 </summary>
	<value>
 ID.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Type`1.Libelle">
	<summary>
 Libelle.
 Champ associé : VTL_TYPE.VTL_TYPE_LIBELLE.
 </summary>
	<value>
 Libelle.
 </value>
</member><member name="F:VITAL.BO.VITAL.Raw.Type`1.HasHisto">
	<summary>
 Indique si l'objet a un historique ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Type`1.HasCache">
	<summary>
 Indique si l'objet utilise le cache ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Type`1.TableName">
	<summary>
 Nom de la table associée à la classe.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Raw.Type`1.CloneAsNew(System.Boolean)">
	<summary> Clone l'objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.Type`1.CopyTo(`0,System.Boolean)">
	<summary> Copie objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.Type`1.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.Type`1.ToRow(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.Type`1.Diff(VITAL.BO.VITAL.Raw.Type{`0})">
	<summary>
 Permet de détecter toutes les différences entre 2 objets
 </summary>
	<param name="p_o_object">Objet de la classe Type.</param>
</member><member name="T:VITAL.BO.VITAL.Raw.Type`1">
	<summary>
 Typede l'animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.User`1.m_b_changes">
	<summary>
 Indique s'il y a eu des changements sur l'objet ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.User`1.m_i_iD">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.User`1.m_s_login">
	<summary>
 Login.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.User`1.m_s_mdp">
	<summary>
 Mdp.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.User`1.m_s_role">
	<summary>
 Role.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Raw.User`1.HasChanges">
	<summary>
 Indique si l'objet a subi des modifications ou non
 </summary>
	<value>
	</value>
</member><member name="P:VITAL.BO.VITAL.Raw.User`1.ID">
	<summary>
 ID.
 Champ associé : VTL_USER.VTL_USER_ID.
 </summary>
	<value>
 ID.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.User`1.Login">
	<summary>
 Login.
 Champ associé : VTL_USER.VTL_USER_LOGIN.
 </summary>
	<value>
 Login.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.User`1.Mdp">
	<summary>
 Mdp.
 Champ associé : VTL_USER.VTL_USER_MDP.
 </summary>
	<value>
 Mdp.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.User`1.Role">
	<summary>
 Role.
 Champ associé : VTL_USER.VTL_USER_ROLE.
 </summary>
	<value>
 Role.
 </value>
</member><member name="F:VITAL.BO.VITAL.Raw.User`1.HasHisto">
	<summary>
 Indique si l'objet a un historique ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.User`1.HasCache">
	<summary>
 Indique si l'objet utilise le cache ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.User`1.TableName">
	<summary>
 Nom de la table associée à la classe.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Raw.User`1.CloneAsNew(System.Boolean)">
	<summary> Clone l'objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.User`1.CopyTo(`0,System.Boolean)">
	<summary> Copie objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.User`1.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.User`1.ToRow(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.User`1.Diff(VITAL.BO.VITAL.Raw.User{`0})">
	<summary>
 Permet de détecter toutes les différences entre 2 objets
 </summary>
	<param name="p_o_object">Objet de la classe User.</param>
</member><member name="T:VITAL.BO.VITAL.Raw.User`1">
	<summary>
 User.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Vaccin`1.m_b_changes">
	<summary>
 Indique s'il y a eu des changements sur l'objet ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Vaccin`1.m_i_iD">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Vaccin`1.m_s_libelle">
	<summary>
 Libelle.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Vaccin`1.m_b_top_periodique">
	<summary>
 Top_periodique.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Vaccin`1.m_i_periode_mois">
	<summary>
 Periode_mois.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Vaccin`1.m_b_top_recommandation">
	<summary>
 Top_recommandation.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Raw.Vaccin`1.HasChanges">
	<summary>
 Indique si l'objet a subi des modifications ou non
 </summary>
	<value>
	</value>
</member><member name="P:VITAL.BO.VITAL.Raw.Vaccin`1.ID">
	<summary>
 ID.
 Champ associé : VTL_VACCIN.VTL_VACCIN_ID.
 </summary>
	<value>
 ID.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Vaccin`1.Libelle">
	<summary>
 Libelle.
 Champ associé : VTL_VACCIN.VTL_VACCIN_LIBELLE.
 </summary>
	<value>
 Libelle.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Vaccin`1.Top_periodique">
	<summary>
 Top_periodique.
 Champ associé : VTL_VACCIN.VTL_VACCIN_TOP_PERIODIQUE.
 </summary>
	<value>
 Top_periodique.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Vaccin`1.Periode_mois">
	<summary>
 Periode_mois.
 Champ associé : VTL_VACCIN.VTL_VACCIN_PERIODE_MOIS.
 </summary>
	<value>
 Periode_mois.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Vaccin`1.Top_recommandation">
	<summary>
 Top_recommandation.
 Champ associé : VTL_VACCIN.VTL_VACCIN_TOP_RECOMMANDATION.
 </summary>
	<value>
 Top_recommandation.
 </value>
</member><member name="F:VITAL.BO.VITAL.Raw.Vaccin`1.HasHisto">
	<summary>
 Indique si l'objet a un historique ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Vaccin`1.HasCache">
	<summary>
 Indique si l'objet utilise le cache ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Vaccin`1.TableName">
	<summary>
 Nom de la table associée à la classe.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Raw.Vaccin`1.CloneAsNew(System.Boolean)">
	<summary> Clone l'objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.Vaccin`1.CopyTo(`0,System.Boolean)">
	<summary> Copie objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.Vaccin`1.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.Vaccin`1.ToRow(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.Vaccin`1.Diff(VITAL.BO.VITAL.Raw.Vaccin{`0})">
	<summary>
 Permet de détecter toutes les différences entre 2 objets
 </summary>
	<param name="p_o_object">Objet de la classe Vaccin.</param>
</member><member name="T:VITAL.BO.VITAL.Raw.Vaccin`1">
	<summary>
 Vaccin.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Vaccination`1.m_b_changes">
	<summary>
 Indique s'il y a eu des changements sur l'objet ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Vaccination`1.m_i_iD">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Vaccination`1.m_i_id_animal">
	<summary>
 Id_animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Vaccination`1.m_i_id_vaccin">
	<summary>
 Id_vaccin.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Vaccination`1.m_dt_dt_vaccin">
	<summary>
 Dt_vaccin.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Vaccination`1.m_i_id_consultation">
	<summary>
 Id_consultation.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Raw.Vaccination`1.HasChanges">
	<summary>
 Indique si l'objet a subi des modifications ou non
 </summary>
	<value>
	</value>
</member><member name="P:VITAL.BO.VITAL.Raw.Vaccination`1.ID">
	<summary>
 ID.
 Champ associé : VTL_VACCINATION.VTL_VACCINATION_ID.
 </summary>
	<value>
 ID.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Vaccination`1.Id_animal">
	<summary>
 Id_animal.
 Champ associé : VTL_VACCINATION.VTL_VACCINATION_ID_ANIMAL.
 </summary>
	<value>
 Id_animal.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Vaccination`1.Id_vaccin">
	<summary>
 Id_vaccin.
 Champ associé : VTL_VACCINATION.VTL_VACCINATION_ID_VACCIN.
 </summary>
	<value>
 Id_vaccin.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Vaccination`1.Dt_vaccin">
	<summary>
 Dt_vaccin.
 Champ associé : VTL_VACCINATION.VTL_VACCINATION_DT_VACCIN.
 </summary>
	<value>
 Dt_vaccin.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Vaccination`1.Id_consultation">
	<summary>
 Id_consultation.
 Champ associé : VTL_VACCINATION.VTL_VACCINATION_ID_CONSULTATION.
 </summary>
	<value>
 Id_consultation.
 </value>
</member><member name="F:VITAL.BO.VITAL.Raw.Vaccination`1.HasHisto">
	<summary>
 Indique si l'objet a un historique ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Vaccination`1.HasCache">
	<summary>
 Indique si l'objet utilise le cache ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Vaccination`1.TableName">
	<summary>
 Nom de la table associée à la classe.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Raw.Vaccination`1.CloneAsNew(System.Boolean)">
	<summary> Clone l'objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.Vaccination`1.CopyTo(`0,System.Boolean)">
	<summary> Copie objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.Vaccination`1.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.Vaccination`1.ToRow(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.Vaccination`1.Diff(VITAL.BO.VITAL.Raw.Vaccination{`0})">
	<summary>
 Permet de détecter toutes les différences entre 2 objets
 </summary>
	<param name="p_o_object">Objet de la classe Vaccination.</param>
</member><member name="T:VITAL.BO.VITAL.Raw.Vaccination`1">
	<summary>
 Vaccination d'un animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Veterinaire`1.m_b_changes">
	<summary>
 Indique s'il y a eu des changements sur l'objet ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Veterinaire`1.m_i_iD">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Veterinaire`1.m_s_nom">
	<summary>
 Nom.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Veterinaire`1.m_s_prenom">
	<summary>
 Prenom.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Veterinaire`1.m_s_sIRET">
	<summary>
 SIRET.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Raw.Veterinaire`1.HasChanges">
	<summary>
 Indique si l'objet a subi des modifications ou non
 </summary>
	<value>
	</value>
</member><member name="P:VITAL.BO.VITAL.Raw.Veterinaire`1.ID">
	<summary>
 ID.
 Champ associé : VTL_VETERINAIRE.VTL_VETERINAIRE_ID.
 </summary>
	<value>
 ID.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Veterinaire`1.Nom">
	<summary>
 Nom.
 Champ associé : VTL_VETERINAIRE.VTL_VETERINAIRE_NOM.
 </summary>
	<value>
 Nom.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Veterinaire`1.Prenom">
	<summary>
 Prenom.
 Champ associé : VTL_VETERINAIRE.VTL_VETERINAIRE_PRENOM.
 </summary>
	<value>
 Prenom.
 </value>
</member><member name="P:VITAL.BO.VITAL.Raw.Veterinaire`1.SIRET">
	<summary>
 SIRET.
 Champ associé : VTL_VETERINAIRE.VTL_VETERINAIRE_SIRET.
 </summary>
	<value>
 SIRET.
 </value>
</member><member name="F:VITAL.BO.VITAL.Raw.Veterinaire`1.HasHisto">
	<summary>
 Indique si l'objet a un historique ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Veterinaire`1.HasCache">
	<summary>
 Indique si l'objet utilise le cache ou non
 </summary>
</member><member name="F:VITAL.BO.VITAL.Raw.Veterinaire`1.TableName">
	<summary>
 Nom de la table associée à la classe.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Raw.Veterinaire`1.CloneAsNew(System.Boolean)">
	<summary> Clone l'objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.Veterinaire`1.CopyTo(`0,System.Boolean)">
	<summary> Copie objet vers un autre avec la possibilité d'occulter la valorisation des propriétés des clés primaires.
 </summary>
	<param name="p_b_includeKeyValues">
		<c>true</c> pour inclure les valeurs des clés primaires.</param>
	<returns>
		<paramref name="p_o_target"/></returns>
</member><member name="M:VITAL.BO.VITAL.Raw.Veterinaire`1.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.Veterinaire`1.ToRow(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Raw.Veterinaire`1.Diff(VITAL.BO.VITAL.Raw.Veterinaire{`0})">
	<summary>
 Permet de détecter toutes les différences entre 2 objets
 </summary>
	<param name="p_o_object">Objet de la classe Veterinaire.</param>
</member><member name="T:VITAL.BO.VITAL.Raw.Veterinaire`1">
	<summary>
 Veterinaire.
 </summary>
</member><member name="T:VITAL.BO.VITAL.Assurance">
	<summary>
 Assurance.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Adopter.m_b_update">
	<summary>
 Indique s'il s'agit d'un élément chargé à partir de la base de données.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.Adopter.IsNew">
	<summary>
 Indique si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregistrement sera mis à jour.
 </summary>
	<value>
		<c>true</c> si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregestement sera mis à jour.
 </value>
</member><member name="M:VITAL.BO.VITAL.Auto.Adopter.InitDefaultValues">
	<summary>
 Initialization par défaut avec les valeurs définies via Modeler
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Adopter.OnInitDefaultValues">
	<summary> Post-initialisation en fin d'appel du ou des constructeurs de classe. 
 Permet de surcharger les valeurs par défaut des propriétés.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Adopter.GetAll(Corail.Core.Transaction)">
	<summary>
 Retourne la requête retournant tous les élements.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
	<returns>Tous les éléments</returns>
</member><member name="M:VITAL.BO.VITAL.Auto.Adopter.FindDR(System.Int32,Corail.Core.Transaction)">
	<summary>
 Retourne la ligne de données correspondant à l'enregistrement.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Adopter.Load(System.Int32,Corail.Core.Transaction)">
	<summary>
 Chargement des informations à partir la table VTL_ADOPTER.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Adopter.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table VTL_ADOPTER.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Adopter.Save(Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_ADOPTER.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Adopter.Save(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_ADOPTER.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Adopter.Cancel(Corail.Core.Transaction)">
	<summary>
 Annule les changements apportés a l'objet
 </summary>
	<param name="p_o_trans">Transaction a utiliser</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Adopter.Delete(Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_ADOPTER.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Adopter.Delete(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_ADOPTER.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="F:VITAL.BO.VITAL.Auto.Adopter.m_o_cacheDt">
	<summary>
 Cache Datatable
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Adopter.m_o_cacheLock">
	<summary>
 Cache Lock
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Adopter.m_b_cacheHasChanges">
	<summary>
 Cache Changes
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.Adopter.CacheDt(Corail.Core.Transaction,System.Boolean)">
	<summary>
 Propriété du cache datatable
 </summary>
	<param name="p_o_trans">La transaction à utiliser</param>
	<param name="p_b_force">Objet de la classe Adopter.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Adopter.CacheDtKey(VITAL.BO.VITAL.Adopter)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
	<param name="p_o_object">Objet de la classe Adopter.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Adopter.CacheDtKeyFind(VITAL.BO.VITAL.Adopter)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Adopter.CacheUpdate(System.Boolean)">
	<summary>
 Permet mettre à jour le cache
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Adopter.CacheUpdateDt(System.Boolean)">
	<summary>
 Permet mettre à jour le cache datatable
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Adopter.CacheClear(System.Boolean)">
	<summary>
 Permet vider le cache datatable
 </summary>
	<param name="p_b_force">Indique si l'on force le vidage ou non</param>
</member><member name="T:VITAL.BO.VITAL.Auto.Adopter">
	<summary>
 Adopter : Associations etre propriétaire et animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Animal.m_b_update">
	<summary>
 Indique s'il s'agit d'un élément chargé à partir de la base de données.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.Animal.IsNew">
	<summary>
 Indique si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregistrement sera mis à jour.
 </summary>
	<value>
		<c>true</c> si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregestement sera mis à jour.
 </value>
</member><member name="M:VITAL.BO.VITAL.Auto.Animal.InitDefaultValues">
	<summary>
 Initialization par défaut avec les valeurs définies via Modeler
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Animal.OnInitDefaultValues">
	<summary> Post-initialisation en fin d'appel du ou des constructeurs de classe. 
 Permet de surcharger les valeurs par défaut des propriétés.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Animal.GetAll(Corail.Core.Transaction)">
	<summary>
 Retourne la requête retournant tous les élements.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
	<returns>Tous les éléments</returns>
</member><member name="M:VITAL.BO.VITAL.Auto.Animal.FindDR(System.Int32,Corail.Core.Transaction)">
	<summary>
 Retourne la ligne de données correspondant à l'enregistrement.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Animal.Load(System.Int32,Corail.Core.Transaction)">
	<summary>
 Chargement des informations à partir la table VTL_ANIMAL.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Animal.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table VTL_ANIMAL.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Animal.Save(Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_ANIMAL.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Animal.Save(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_ANIMAL.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Animal.Cancel(Corail.Core.Transaction)">
	<summary>
 Annule les changements apportés a l'objet
 </summary>
	<param name="p_o_trans">Transaction a utiliser</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Animal.Delete(Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_ANIMAL.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Animal.Delete(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_ANIMAL.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="F:VITAL.BO.VITAL.Auto.Animal.m_o_cacheDt">
	<summary>
 Cache Datatable
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Animal.m_o_cacheLock">
	<summary>
 Cache Lock
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Animal.m_b_cacheHasChanges">
	<summary>
 Cache Changes
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.Animal.CacheDt(Corail.Core.Transaction,System.Boolean)">
	<summary>
 Propriété du cache datatable
 </summary>
	<param name="p_o_trans">La transaction à utiliser</param>
	<param name="p_b_force">Objet de la classe Animal.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Animal.CacheDtKey(VITAL.BO.VITAL.Animal)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
	<param name="p_o_object">Objet de la classe Animal.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Animal.CacheDtKeyFind(VITAL.BO.VITAL.Animal)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Animal.CacheUpdate(System.Boolean)">
	<summary>
 Permet mettre à jour le cache
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Animal.CacheUpdateDt(System.Boolean)">
	<summary>
 Permet mettre à jour le cache datatable
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Animal.CacheClear(System.Boolean)">
	<summary>
 Permet vider le cache datatable
 </summary>
	<param name="p_b_force">Indique si l'on force le vidage ou non</param>
</member><member name="T:VITAL.BO.VITAL.Auto.Animal">
	<summary>
 Animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Assurance.m_b_update">
	<summary>
 Indique s'il s'agit d'un élément chargé à partir de la base de données.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.Assurance.IsNew">
	<summary>
 Indique si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregistrement sera mis à jour.
 </summary>
	<value>
		<c>true</c> si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregestement sera mis à jour.
 </value>
</member><member name="M:VITAL.BO.VITAL.Auto.Assurance.InitDefaultValues">
	<summary>
 Initialization par défaut avec les valeurs définies via Modeler
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Assurance.OnInitDefaultValues">
	<summary> Post-initialisation en fin d'appel du ou des constructeurs de classe. 
 Permet de surcharger les valeurs par défaut des propriétés.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Assurance.GetAll(Corail.Core.Transaction)">
	<summary>
 Retourne la requête retournant tous les élements.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
	<returns>Tous les éléments</returns>
</member><member name="M:VITAL.BO.VITAL.Auto.Assurance.FindDR(System.Int32,Corail.Core.Transaction)">
	<summary>
 Retourne la ligne de données correspondant à l'enregistrement.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Assurance.Load(System.Int32,Corail.Core.Transaction)">
	<summary>
 Chargement des informations à partir la table VTL_ASSURANCE.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Assurance.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table VTL_ASSURANCE.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Assurance.Save(Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_ASSURANCE.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Assurance.Save(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_ASSURANCE.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Assurance.Cancel(Corail.Core.Transaction)">
	<summary>
 Annule les changements apportés a l'objet
 </summary>
	<param name="p_o_trans">Transaction a utiliser</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Assurance.Delete(Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_ASSURANCE.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Assurance.Delete(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_ASSURANCE.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="F:VITAL.BO.VITAL.Auto.Assurance.m_o_cacheDt">
	<summary>
 Cache Datatable
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Assurance.m_o_cacheLock">
	<summary>
 Cache Lock
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Assurance.m_b_cacheHasChanges">
	<summary>
 Cache Changes
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.Assurance.CacheDt(Corail.Core.Transaction,System.Boolean)">
	<summary>
 Propriété du cache datatable
 </summary>
	<param name="p_o_trans">La transaction à utiliser</param>
	<param name="p_b_force">Objet de la classe Assurance.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Assurance.CacheDtKey(VITAL.BO.VITAL.Assurance)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
	<param name="p_o_object">Objet de la classe Assurance.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Assurance.CacheDtKeyFind(VITAL.BO.VITAL.Assurance)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Assurance.CacheUpdate(System.Boolean)">
	<summary>
 Permet mettre à jour le cache
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Assurance.CacheUpdateDt(System.Boolean)">
	<summary>
 Permet mettre à jour le cache datatable
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Assurance.CacheClear(System.Boolean)">
	<summary>
 Permet vider le cache datatable
 </summary>
	<param name="p_b_force">Indique si l'on force le vidage ou non</param>
</member><member name="T:VITAL.BO.VITAL.Auto.Assurance">
	<summary>
 Assurance.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Carte.m_b_update">
	<summary>
 Indique s'il s'agit d'un élément chargé à partir de la base de données.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.Carte.IsNew">
	<summary>
 Indique si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregistrement sera mis à jour.
 </summary>
	<value>
		<c>true</c> si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregestement sera mis à jour.
 </value>
</member><member name="M:VITAL.BO.VITAL.Auto.Carte.InitDefaultValues">
	<summary>
 Initialization par défaut avec les valeurs définies via Modeler
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Carte.OnInitDefaultValues">
	<summary> Post-initialisation en fin d'appel du ou des constructeurs de classe. 
 Permet de surcharger les valeurs par défaut des propriétés.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Carte.GetAll(Corail.Core.Transaction)">
	<summary>
 Retourne la requête retournant tous les élements.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
	<returns>Tous les éléments</returns>
</member><member name="M:VITAL.BO.VITAL.Auto.Carte.FindDR(System.Int32,Corail.Core.Transaction)">
	<summary>
 Retourne la ligne de données correspondant à l'enregistrement.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Carte.Load(System.Int32,Corail.Core.Transaction)">
	<summary>
 Chargement des informations à partir la table VTL_CARTE.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Carte.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table VTL_CARTE.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Carte.Save(Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_CARTE.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Carte.Save(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_CARTE.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Carte.Cancel(Corail.Core.Transaction)">
	<summary>
 Annule les changements apportés a l'objet
 </summary>
	<param name="p_o_trans">Transaction a utiliser</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Carte.Delete(Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_CARTE.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Carte.Delete(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_CARTE.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="F:VITAL.BO.VITAL.Auto.Carte.m_o_cacheDt">
	<summary>
 Cache Datatable
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Carte.m_o_cacheLock">
	<summary>
 Cache Lock
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Carte.m_b_cacheHasChanges">
	<summary>
 Cache Changes
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.Carte.CacheDt(Corail.Core.Transaction,System.Boolean)">
	<summary>
 Propriété du cache datatable
 </summary>
	<param name="p_o_trans">La transaction à utiliser</param>
	<param name="p_b_force">Objet de la classe Carte.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Carte.CacheDtKey(VITAL.BO.VITAL.Carte)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
	<param name="p_o_object">Objet de la classe Carte.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Carte.CacheDtKeyFind(VITAL.BO.VITAL.Carte)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Carte.CacheUpdate(System.Boolean)">
	<summary>
 Permet mettre à jour le cache
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Carte.CacheUpdateDt(System.Boolean)">
	<summary>
 Permet mettre à jour le cache datatable
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Carte.CacheClear(System.Boolean)">
	<summary>
 Permet vider le cache datatable
 </summary>
	<param name="p_b_force">Indique si l'on force le vidage ou non</param>
</member><member name="T:VITAL.BO.VITAL.Auto.Carte">
	<summary>
 Carte vitale.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Consultation.m_b_update">
	<summary>
 Indique s'il s'agit d'un élément chargé à partir de la base de données.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.Consultation.IsNew">
	<summary>
 Indique si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregistrement sera mis à jour.
 </summary>
	<value>
		<c>true</c> si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregestement sera mis à jour.
 </value>
</member><member name="M:VITAL.BO.VITAL.Auto.Consultation.InitDefaultValues">
	<summary>
 Initialization par défaut avec les valeurs définies via Modeler
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Consultation.OnInitDefaultValues">
	<summary> Post-initialisation en fin d'appel du ou des constructeurs de classe. 
 Permet de surcharger les valeurs par défaut des propriétés.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Consultation.GetAll(Corail.Core.Transaction)">
	<summary>
 Retourne la requête retournant tous les élements.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
	<returns>Tous les éléments</returns>
</member><member name="M:VITAL.BO.VITAL.Auto.Consultation.FindDR(System.Int32,Corail.Core.Transaction)">
	<summary>
 Retourne la ligne de données correspondant à l'enregistrement.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Consultation.Load(System.Int32,Corail.Core.Transaction)">
	<summary>
 Chargement des informations à partir la table VTL_CONSULTATION.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Consultation.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table VTL_CONSULTATION.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Consultation.Save(Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_CONSULTATION.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Consultation.Save(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_CONSULTATION.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Consultation.Cancel(Corail.Core.Transaction)">
	<summary>
 Annule les changements apportés a l'objet
 </summary>
	<param name="p_o_trans">Transaction a utiliser</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Consultation.Delete(Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_CONSULTATION.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Consultation.Delete(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_CONSULTATION.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="F:VITAL.BO.VITAL.Auto.Consultation.m_o_cacheDt">
	<summary>
 Cache Datatable
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Consultation.m_o_cacheLock">
	<summary>
 Cache Lock
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Consultation.m_b_cacheHasChanges">
	<summary>
 Cache Changes
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.Consultation.CacheDt(Corail.Core.Transaction,System.Boolean)">
	<summary>
 Propriété du cache datatable
 </summary>
	<param name="p_o_trans">La transaction à utiliser</param>
	<param name="p_b_force">Objet de la classe Consultation.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Consultation.CacheDtKey(VITAL.BO.VITAL.Consultation)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
	<param name="p_o_object">Objet de la classe Consultation.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Consultation.CacheDtKeyFind(VITAL.BO.VITAL.Consultation)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Consultation.CacheUpdate(System.Boolean)">
	<summary>
 Permet mettre à jour le cache
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Consultation.CacheUpdateDt(System.Boolean)">
	<summary>
 Permet mettre à jour le cache datatable
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Consultation.CacheClear(System.Boolean)">
	<summary>
 Permet vider le cache datatable
 </summary>
	<param name="p_b_force">Indique si l'on force le vidage ou non</param>
</member><member name="T:VITAL.BO.VITAL.Auto.Consultation">
	<summary>
 Consultation vétérinaire d'un animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Contrat.m_b_update">
	<summary>
 Indique s'il s'agit d'un élément chargé à partir de la base de données.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.Contrat.IsNew">
	<summary>
 Indique si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregistrement sera mis à jour.
 </summary>
	<value>
		<c>true</c> si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregestement sera mis à jour.
 </value>
</member><member name="M:VITAL.BO.VITAL.Auto.Contrat.InitDefaultValues">
	<summary>
 Initialization par défaut avec les valeurs définies via Modeler
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Contrat.OnInitDefaultValues">
	<summary> Post-initialisation en fin d'appel du ou des constructeurs de classe. 
 Permet de surcharger les valeurs par défaut des propriétés.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Contrat.GetAll(Corail.Core.Transaction)">
	<summary>
 Retourne la requête retournant tous les élements.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
	<returns>Tous les éléments</returns>
</member><member name="M:VITAL.BO.VITAL.Auto.Contrat.FindDR(System.Int32,Corail.Core.Transaction)">
	<summary>
 Retourne la ligne de données correspondant à l'enregistrement.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Contrat.Load(System.Int32,Corail.Core.Transaction)">
	<summary>
 Chargement des informations à partir la table VTL_CONTRAT.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Contrat.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table VTL_CONTRAT.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Contrat.Save(Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_CONTRAT.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Contrat.Save(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_CONTRAT.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Contrat.Cancel(Corail.Core.Transaction)">
	<summary>
 Annule les changements apportés a l'objet
 </summary>
	<param name="p_o_trans">Transaction a utiliser</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Contrat.Delete(Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_CONTRAT.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Contrat.Delete(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_CONTRAT.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="F:VITAL.BO.VITAL.Auto.Contrat.m_o_cacheDt">
	<summary>
 Cache Datatable
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Contrat.m_o_cacheLock">
	<summary>
 Cache Lock
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Contrat.m_b_cacheHasChanges">
	<summary>
 Cache Changes
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.Contrat.CacheDt(Corail.Core.Transaction,System.Boolean)">
	<summary>
 Propriété du cache datatable
 </summary>
	<param name="p_o_trans">La transaction à utiliser</param>
	<param name="p_b_force">Objet de la classe Contrat.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Contrat.CacheDtKey(VITAL.BO.VITAL.Contrat)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
	<param name="p_o_object">Objet de la classe Contrat.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Contrat.CacheDtKeyFind(VITAL.BO.VITAL.Contrat)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Contrat.CacheUpdate(System.Boolean)">
	<summary>
 Permet mettre à jour le cache
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Contrat.CacheUpdateDt(System.Boolean)">
	<summary>
 Permet mettre à jour le cache datatable
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Contrat.CacheClear(System.Boolean)">
	<summary>
 Permet vider le cache datatable
 </summary>
	<param name="p_b_force">Indique si l'on force le vidage ou non</param>
</member><member name="T:VITAL.BO.VITAL.Auto.Contrat">
	<summary>
 Contrat d'assurance.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Histo_Poids.m_b_update">
	<summary>
 Indique s'il s'agit d'un élément chargé à partir de la base de données.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.Histo_Poids.IsNew">
	<summary>
 Indique si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregistrement sera mis à jour.
 </summary>
	<value>
		<c>true</c> si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregestement sera mis à jour.
 </value>
</member><member name="M:VITAL.BO.VITAL.Auto.Histo_Poids.InitDefaultValues">
	<summary>
 Initialization par défaut avec les valeurs définies via Modeler
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Histo_Poids.OnInitDefaultValues">
	<summary> Post-initialisation en fin d'appel du ou des constructeurs de classe. 
 Permet de surcharger les valeurs par défaut des propriétés.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Histo_Poids.GetAll(Corail.Core.Transaction)">
	<summary>
 Retourne la requête retournant tous les élements.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
	<returns>Tous les éléments</returns>
</member><member name="M:VITAL.BO.VITAL.Auto.Histo_Poids.FindDR(System.Int32,Corail.Core.Transaction)">
	<summary>
 Retourne la ligne de données correspondant à l'enregistrement.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Histo_Poids.Load(System.Int32,Corail.Core.Transaction)">
	<summary>
 Chargement des informations à partir la table VTL_HISTO_POIDS.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Histo_Poids.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table VTL_HISTO_POIDS.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Histo_Poids.Save(Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_HISTO_POIDS.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Histo_Poids.Save(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_HISTO_POIDS.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Histo_Poids.Cancel(Corail.Core.Transaction)">
	<summary>
 Annule les changements apportés a l'objet
 </summary>
	<param name="p_o_trans">Transaction a utiliser</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Histo_Poids.Delete(Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_HISTO_POIDS.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Histo_Poids.Delete(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_HISTO_POIDS.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="F:VITAL.BO.VITAL.Auto.Histo_Poids.m_o_cacheDt">
	<summary>
 Cache Datatable
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Histo_Poids.m_o_cacheLock">
	<summary>
 Cache Lock
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Histo_Poids.m_b_cacheHasChanges">
	<summary>
 Cache Changes
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.Histo_Poids.CacheDt(Corail.Core.Transaction,System.Boolean)">
	<summary>
 Propriété du cache datatable
 </summary>
	<param name="p_o_trans">La transaction à utiliser</param>
	<param name="p_b_force">Objet de la classe Histo_Poids.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Histo_Poids.CacheDtKey(VITAL.BO.VITAL.Histo_Poids)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
	<param name="p_o_object">Objet de la classe Histo_Poids.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Histo_Poids.CacheDtKeyFind(VITAL.BO.VITAL.Histo_Poids)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Histo_Poids.CacheUpdate(System.Boolean)">
	<summary>
 Permet mettre à jour le cache
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Histo_Poids.CacheUpdateDt(System.Boolean)">
	<summary>
 Permet mettre à jour le cache datatable
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Histo_Poids.CacheClear(System.Boolean)">
	<summary>
 Permet vider le cache datatable
 </summary>
	<param name="p_b_force">Indique si l'on force le vidage ou non</param>
</member><member name="T:VITAL.BO.VITAL.Auto.Histo_Poids">
	<summary>
 Historique du poids de l'animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Histo_Taille.m_b_update">
	<summary>
 Indique s'il s'agit d'un élément chargé à partir de la base de données.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.Histo_Taille.IsNew">
	<summary>
 Indique si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregistrement sera mis à jour.
 </summary>
	<value>
		<c>true</c> si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregestement sera mis à jour.
 </value>
</member><member name="M:VITAL.BO.VITAL.Auto.Histo_Taille.InitDefaultValues">
	<summary>
 Initialization par défaut avec les valeurs définies via Modeler
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Histo_Taille.OnInitDefaultValues">
	<summary> Post-initialisation en fin d'appel du ou des constructeurs de classe. 
 Permet de surcharger les valeurs par défaut des propriétés.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Histo_Taille.GetAll(Corail.Core.Transaction)">
	<summary>
 Retourne la requête retournant tous les élements.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
	<returns>Tous les éléments</returns>
</member><member name="M:VITAL.BO.VITAL.Auto.Histo_Taille.FindDR(System.Int32,Corail.Core.Transaction)">
	<summary>
 Retourne la ligne de données correspondant à l'enregistrement.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Histo_Taille.Load(System.Int32,Corail.Core.Transaction)">
	<summary>
 Chargement des informations à partir la table VTL_HISTO_TAILLE.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Histo_Taille.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table VTL_HISTO_TAILLE.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Histo_Taille.Save(Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_HISTO_TAILLE.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Histo_Taille.Save(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_HISTO_TAILLE.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Histo_Taille.Cancel(Corail.Core.Transaction)">
	<summary>
 Annule les changements apportés a l'objet
 </summary>
	<param name="p_o_trans">Transaction a utiliser</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Histo_Taille.Delete(Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_HISTO_TAILLE.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Histo_Taille.Delete(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_HISTO_TAILLE.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="F:VITAL.BO.VITAL.Auto.Histo_Taille.m_o_cacheDt">
	<summary>
 Cache Datatable
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Histo_Taille.m_o_cacheLock">
	<summary>
 Cache Lock
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Histo_Taille.m_b_cacheHasChanges">
	<summary>
 Cache Changes
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.Histo_Taille.CacheDt(Corail.Core.Transaction,System.Boolean)">
	<summary>
 Propriété du cache datatable
 </summary>
	<param name="p_o_trans">La transaction à utiliser</param>
	<param name="p_b_force">Objet de la classe Histo_Taille.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Histo_Taille.CacheDtKey(VITAL.BO.VITAL.Histo_Taille)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
	<param name="p_o_object">Objet de la classe Histo_Taille.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Histo_Taille.CacheDtKeyFind(VITAL.BO.VITAL.Histo_Taille)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Histo_Taille.CacheUpdate(System.Boolean)">
	<summary>
 Permet mettre à jour le cache
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Histo_Taille.CacheUpdateDt(System.Boolean)">
	<summary>
 Permet mettre à jour le cache datatable
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Histo_Taille.CacheClear(System.Boolean)">
	<summary>
 Permet vider le cache datatable
 </summary>
	<param name="p_b_force">Indique si l'on force le vidage ou non</param>
</member><member name="T:VITAL.BO.VITAL.Auto.Histo_Taille">
	<summary>
 Historique de la taille de l'animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Medicament.m_b_update">
	<summary>
 Indique s'il s'agit d'un élément chargé à partir de la base de données.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.Medicament.IsNew">
	<summary>
 Indique si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregistrement sera mis à jour.
 </summary>
	<value>
		<c>true</c> si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregestement sera mis à jour.
 </value>
</member><member name="M:VITAL.BO.VITAL.Auto.Medicament.InitDefaultValues">
	<summary>
 Initialization par défaut avec les valeurs définies via Modeler
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Medicament.OnInitDefaultValues">
	<summary> Post-initialisation en fin d'appel du ou des constructeurs de classe. 
 Permet de surcharger les valeurs par défaut des propriétés.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Medicament.GetAll(Corail.Core.Transaction)">
	<summary>
 Retourne la requête retournant tous les élements.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
	<returns>Tous les éléments</returns>
</member><member name="M:VITAL.BO.VITAL.Auto.Medicament.FindDR(System.Int32,Corail.Core.Transaction)">
	<summary>
 Retourne la ligne de données correspondant à l'enregistrement.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Medicament.Load(System.Int32,Corail.Core.Transaction)">
	<summary>
 Chargement des informations à partir la table VTL_MEDICAMENT.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Medicament.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table VTL_MEDICAMENT.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Medicament.Save(Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_MEDICAMENT.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Medicament.Save(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_MEDICAMENT.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Medicament.Cancel(Corail.Core.Transaction)">
	<summary>
 Annule les changements apportés a l'objet
 </summary>
	<param name="p_o_trans">Transaction a utiliser</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Medicament.Delete(Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_MEDICAMENT.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Medicament.Delete(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_MEDICAMENT.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="F:VITAL.BO.VITAL.Auto.Medicament.m_o_cacheDt">
	<summary>
 Cache Datatable
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Medicament.m_o_cacheLock">
	<summary>
 Cache Lock
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Medicament.m_b_cacheHasChanges">
	<summary>
 Cache Changes
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.Medicament.CacheDt(Corail.Core.Transaction,System.Boolean)">
	<summary>
 Propriété du cache datatable
 </summary>
	<param name="p_o_trans">La transaction à utiliser</param>
	<param name="p_b_force">Objet de la classe Medicament.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Medicament.CacheDtKey(VITAL.BO.VITAL.Medicament)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
	<param name="p_o_object">Objet de la classe Medicament.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Medicament.CacheDtKeyFind(VITAL.BO.VITAL.Medicament)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Medicament.CacheUpdate(System.Boolean)">
	<summary>
 Permet mettre à jour le cache
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Medicament.CacheUpdateDt(System.Boolean)">
	<summary>
 Permet mettre à jour le cache datatable
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Medicament.CacheClear(System.Boolean)">
	<summary>
 Permet vider le cache datatable
 </summary>
	<param name="p_b_force">Indique si l'on force le vidage ou non</param>
</member><member name="T:VITAL.BO.VITAL.Auto.Medicament">
	<summary>
 Medicament.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Position.m_b_update">
	<summary>
 Indique s'il s'agit d'un élément chargé à partir de la base de données.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.Position.IsNew">
	<summary>
 Indique si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregistrement sera mis à jour.
 </summary>
	<value>
		<c>true</c> si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregestement sera mis à jour.
 </value>
</member><member name="M:VITAL.BO.VITAL.Auto.Position.InitDefaultValues">
	<summary>
 Initialization par défaut avec les valeurs définies via Modeler
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Position.OnInitDefaultValues">
	<summary> Post-initialisation en fin d'appel du ou des constructeurs de classe. 
 Permet de surcharger les valeurs par défaut des propriétés.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Position.GetAll(Corail.Core.Transaction)">
	<summary>
 Retourne la requête retournant tous les élements.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
	<returns>Tous les éléments</returns>
</member><member name="M:VITAL.BO.VITAL.Auto.Position.FindDR(System.Int32,Corail.Core.Transaction)">
	<summary>
 Retourne la ligne de données correspondant à l'enregistrement.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Position.Load(System.Int32,Corail.Core.Transaction)">
	<summary>
 Chargement des informations à partir la table VTL_POSITION.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Position.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table VTL_POSITION.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Position.Save(Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_POSITION.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Position.Save(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_POSITION.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Position.Cancel(Corail.Core.Transaction)">
	<summary>
 Annule les changements apportés a l'objet
 </summary>
	<param name="p_o_trans">Transaction a utiliser</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Position.Delete(Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_POSITION.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Position.Delete(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_POSITION.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="F:VITAL.BO.VITAL.Auto.Position.m_o_cacheDt">
	<summary>
 Cache Datatable
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Position.m_o_cacheLock">
	<summary>
 Cache Lock
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Position.m_b_cacheHasChanges">
	<summary>
 Cache Changes
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.Position.CacheDt(Corail.Core.Transaction,System.Boolean)">
	<summary>
 Propriété du cache datatable
 </summary>
	<param name="p_o_trans">La transaction à utiliser</param>
	<param name="p_b_force">Objet de la classe Position.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Position.CacheDtKey(VITAL.BO.VITAL.Position)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
	<param name="p_o_object">Objet de la classe Position.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Position.CacheDtKeyFind(VITAL.BO.VITAL.Position)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Position.CacheUpdate(System.Boolean)">
	<summary>
 Permet mettre à jour le cache
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Position.CacheUpdateDt(System.Boolean)">
	<summary>
 Permet mettre à jour le cache datatable
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Position.CacheClear(System.Boolean)">
	<summary>
 Permet vider le cache datatable
 </summary>
	<param name="p_b_force">Indique si l'on force le vidage ou non</param>
</member><member name="T:VITAL.BO.VITAL.Auto.Position">
	<summary>
 Position de l'animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.PropriEtaire.m_b_update">
	<summary>
 Indique s'il s'agit d'un élément chargé à partir de la base de données.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.PropriEtaire.IsNew">
	<summary>
 Indique si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregistrement sera mis à jour.
 </summary>
	<value>
		<c>true</c> si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregestement sera mis à jour.
 </value>
</member><member name="M:VITAL.BO.VITAL.Auto.PropriEtaire.InitDefaultValues">
	<summary>
 Initialization par défaut avec les valeurs définies via Modeler
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.PropriEtaire.OnInitDefaultValues">
	<summary> Post-initialisation en fin d'appel du ou des constructeurs de classe. 
 Permet de surcharger les valeurs par défaut des propriétés.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.PropriEtaire.GetAll(Corail.Core.Transaction)">
	<summary>
 Retourne la requête retournant tous les élements.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
	<returns>Tous les éléments</returns>
</member><member name="M:VITAL.BO.VITAL.Auto.PropriEtaire.FindDR(System.Int32,Corail.Core.Transaction)">
	<summary>
 Retourne la ligne de données correspondant à l'enregistrement.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.PropriEtaire.Load(System.Int32,Corail.Core.Transaction)">
	<summary>
 Chargement des informations à partir la table VTL_PROPRIETAIRE.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.PropriEtaire.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table VTL_PROPRIETAIRE.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.PropriEtaire.Save(Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_PROPRIETAIRE.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.PropriEtaire.Save(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_PROPRIETAIRE.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.PropriEtaire.Cancel(Corail.Core.Transaction)">
	<summary>
 Annule les changements apportés a l'objet
 </summary>
	<param name="p_o_trans">Transaction a utiliser</param>
</member><member name="M:VITAL.BO.VITAL.Auto.PropriEtaire.Delete(Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_PROPRIETAIRE.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.PropriEtaire.Delete(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_PROPRIETAIRE.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="F:VITAL.BO.VITAL.Auto.PropriEtaire.m_o_cacheDt">
	<summary>
 Cache Datatable
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.PropriEtaire.m_o_cacheLock">
	<summary>
 Cache Lock
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.PropriEtaire.m_b_cacheHasChanges">
	<summary>
 Cache Changes
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.PropriEtaire.CacheDt(Corail.Core.Transaction,System.Boolean)">
	<summary>
 Propriété du cache datatable
 </summary>
	<param name="p_o_trans">La transaction à utiliser</param>
	<param name="p_b_force">Objet de la classe PropriEtaire.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.PropriEtaire.CacheDtKey(VITAL.BO.VITAL.PropriEtaire)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
	<param name="p_o_object">Objet de la classe PropriEtaire.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.PropriEtaire.CacheDtKeyFind(VITAL.BO.VITAL.PropriEtaire)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.PropriEtaire.CacheUpdate(System.Boolean)">
	<summary>
 Permet mettre à jour le cache
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.PropriEtaire.CacheUpdateDt(System.Boolean)">
	<summary>
 Permet mettre à jour le cache datatable
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.PropriEtaire.CacheClear(System.Boolean)">
	<summary>
 Permet vider le cache datatable
 </summary>
	<param name="p_b_force">Indique si l'on force le vidage ou non</param>
</member><member name="T:VITAL.BO.VITAL.Auto.PropriEtaire">
	<summary>
 Propriétaire.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Race.m_b_update">
	<summary>
 Indique s'il s'agit d'un élément chargé à partir de la base de données.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.Race.IsNew">
	<summary>
 Indique si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregistrement sera mis à jour.
 </summary>
	<value>
		<c>true</c> si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregestement sera mis à jour.
 </value>
</member><member name="M:VITAL.BO.VITAL.Auto.Race.InitDefaultValues">
	<summary>
 Initialization par défaut avec les valeurs définies via Modeler
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Race.OnInitDefaultValues">
	<summary> Post-initialisation en fin d'appel du ou des constructeurs de classe. 
 Permet de surcharger les valeurs par défaut des propriétés.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Race.GetAll(Corail.Core.Transaction)">
	<summary>
 Retourne la requête retournant tous les élements.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
	<returns>Tous les éléments</returns>
</member><member name="M:VITAL.BO.VITAL.Auto.Race.FindDR(System.Int32,Corail.Core.Transaction)">
	<summary>
 Retourne la ligne de données correspondant à l'enregistrement.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Race.Load(System.Int32,Corail.Core.Transaction)">
	<summary>
 Chargement des informations à partir la table VTL_RACE.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Race.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table VTL_RACE.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Race.Save(Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_RACE.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Race.Save(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_RACE.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Race.Cancel(Corail.Core.Transaction)">
	<summary>
 Annule les changements apportés a l'objet
 </summary>
	<param name="p_o_trans">Transaction a utiliser</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Race.Delete(Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_RACE.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Race.Delete(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_RACE.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="F:VITAL.BO.VITAL.Auto.Race.m_o_cacheDt">
	<summary>
 Cache Datatable
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Race.m_o_cacheLock">
	<summary>
 Cache Lock
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Race.m_b_cacheHasChanges">
	<summary>
 Cache Changes
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.Race.CacheDt(Corail.Core.Transaction,System.Boolean)">
	<summary>
 Propriété du cache datatable
 </summary>
	<param name="p_o_trans">La transaction à utiliser</param>
	<param name="p_b_force">Objet de la classe Race.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Race.CacheDtKey(VITAL.BO.VITAL.Race)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
	<param name="p_o_object">Objet de la classe Race.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Race.CacheDtKeyFind(VITAL.BO.VITAL.Race)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Race.CacheUpdate(System.Boolean)">
	<summary>
 Permet mettre à jour le cache
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Race.CacheUpdateDt(System.Boolean)">
	<summary>
 Permet mettre à jour le cache datatable
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Race.CacheClear(System.Boolean)">
	<summary>
 Permet vider le cache datatable
 </summary>
	<param name="p_b_force">Indique si l'on force le vidage ou non</param>
</member><member name="T:VITAL.BO.VITAL.Auto.Race">
	<summary>
 Race de l'animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Traitement_medicament.m_b_update">
	<summary>
 Indique s'il s'agit d'un élément chargé à partir de la base de données.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.Traitement_medicament.IsNew">
	<summary>
 Indique si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregistrement sera mis à jour.
 </summary>
	<value>
		<c>true</c> si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregestement sera mis à jour.
 </value>
</member><member name="M:VITAL.BO.VITAL.Auto.Traitement_medicament.InitDefaultValues">
	<summary>
 Initialization par défaut avec les valeurs définies via Modeler
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Traitement_medicament.OnInitDefaultValues">
	<summary> Post-initialisation en fin d'appel du ou des constructeurs de classe. 
 Permet de surcharger les valeurs par défaut des propriétés.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Traitement_medicament.GetAll(Corail.Core.Transaction)">
	<summary>
 Retourne la requête retournant tous les élements.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
	<returns>Tous les éléments</returns>
</member><member name="M:VITAL.BO.VITAL.Auto.Traitement_medicament.FindDR(System.Int32,Corail.Core.Transaction)">
	<summary>
 Retourne la ligne de données correspondant à l'enregistrement.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Traitement_medicament.Load(System.Int32,Corail.Core.Transaction)">
	<summary>
 Chargement des informations à partir la table VTL_TRAITEMENT_MEDICAMENT.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Traitement_medicament.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table VTL_TRAITEMENT_MEDICAMENT.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Traitement_medicament.Save(Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_TRAITEMENT_MEDICAMENT.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Traitement_medicament.Save(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_TRAITEMENT_MEDICAMENT.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Traitement_medicament.Cancel(Corail.Core.Transaction)">
	<summary>
 Annule les changements apportés a l'objet
 </summary>
	<param name="p_o_trans">Transaction a utiliser</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Traitement_medicament.Delete(Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_TRAITEMENT_MEDICAMENT.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Traitement_medicament.Delete(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_TRAITEMENT_MEDICAMENT.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="F:VITAL.BO.VITAL.Auto.Traitement_medicament.m_o_cacheDt">
	<summary>
 Cache Datatable
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Traitement_medicament.m_o_cacheLock">
	<summary>
 Cache Lock
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Traitement_medicament.m_b_cacheHasChanges">
	<summary>
 Cache Changes
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.Traitement_medicament.CacheDt(Corail.Core.Transaction,System.Boolean)">
	<summary>
 Propriété du cache datatable
 </summary>
	<param name="p_o_trans">La transaction à utiliser</param>
	<param name="p_b_force">Objet de la classe Traitement_medicament.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Traitement_medicament.CacheDtKey(VITAL.BO.VITAL.Traitement_medicament)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
	<param name="p_o_object">Objet de la classe Traitement_medicament.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Traitement_medicament.CacheDtKeyFind(VITAL.BO.VITAL.Traitement_medicament)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Traitement_medicament.CacheUpdate(System.Boolean)">
	<summary>
 Permet mettre à jour le cache
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Traitement_medicament.CacheUpdateDt(System.Boolean)">
	<summary>
 Permet mettre à jour le cache datatable
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Traitement_medicament.CacheClear(System.Boolean)">
	<summary>
 Permet vider le cache datatable
 </summary>
	<param name="p_b_force">Indique si l'on force le vidage ou non</param>
</member><member name="T:VITAL.BO.VITAL.Auto.Traitement_medicament">
	<summary>
 Liste des médicaments compris dans un traitement.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Traitrement.m_b_update">
	<summary>
 Indique s'il s'agit d'un élément chargé à partir de la base de données.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.Traitrement.IsNew">
	<summary>
 Indique si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregistrement sera mis à jour.
 </summary>
	<value>
		<c>true</c> si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregestement sera mis à jour.
 </value>
</member><member name="M:VITAL.BO.VITAL.Auto.Traitrement.InitDefaultValues">
	<summary>
 Initialization par défaut avec les valeurs définies via Modeler
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Traitrement.OnInitDefaultValues">
	<summary> Post-initialisation en fin d'appel du ou des constructeurs de classe. 
 Permet de surcharger les valeurs par défaut des propriétés.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Traitrement.GetAll(Corail.Core.Transaction)">
	<summary>
 Retourne la requête retournant tous les élements.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
	<returns>Tous les éléments</returns>
</member><member name="M:VITAL.BO.VITAL.Auto.Traitrement.FindDR(System.Int32,Corail.Core.Transaction)">
	<summary>
 Retourne la ligne de données correspondant à l'enregistrement.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Traitrement.Load(System.Int32,Corail.Core.Transaction)">
	<summary>
 Chargement des informations à partir la table VTL_TRAITREMENT.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Traitrement.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table VTL_TRAITREMENT.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Traitrement.Save(Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_TRAITREMENT.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Traitrement.Save(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_TRAITREMENT.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Traitrement.Cancel(Corail.Core.Transaction)">
	<summary>
 Annule les changements apportés a l'objet
 </summary>
	<param name="p_o_trans">Transaction a utiliser</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Traitrement.Delete(Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_TRAITREMENT.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Traitrement.Delete(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_TRAITREMENT.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="F:VITAL.BO.VITAL.Auto.Traitrement.m_o_cacheDt">
	<summary>
 Cache Datatable
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Traitrement.m_o_cacheLock">
	<summary>
 Cache Lock
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Traitrement.m_b_cacheHasChanges">
	<summary>
 Cache Changes
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.Traitrement.CacheDt(Corail.Core.Transaction,System.Boolean)">
	<summary>
 Propriété du cache datatable
 </summary>
	<param name="p_o_trans">La transaction à utiliser</param>
	<param name="p_b_force">Objet de la classe Traitrement.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Traitrement.CacheDtKey(VITAL.BO.VITAL.Traitrement)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
	<param name="p_o_object">Objet de la classe Traitrement.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Traitrement.CacheDtKeyFind(VITAL.BO.VITAL.Traitrement)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Traitrement.CacheUpdate(System.Boolean)">
	<summary>
 Permet mettre à jour le cache
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Traitrement.CacheUpdateDt(System.Boolean)">
	<summary>
 Permet mettre à jour le cache datatable
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Traitrement.CacheClear(System.Boolean)">
	<summary>
 Permet vider le cache datatable
 </summary>
	<param name="p_b_force">Indique si l'on force le vidage ou non</param>
</member><member name="T:VITAL.BO.VITAL.Auto.Traitrement">
	<summary>
 Traitrement.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Type.m_b_update">
	<summary>
 Indique s'il s'agit d'un élément chargé à partir de la base de données.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.Type.IsNew">
	<summary>
 Indique si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregistrement sera mis à jour.
 </summary>
	<value>
		<c>true</c> si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregestement sera mis à jour.
 </value>
</member><member name="M:VITAL.BO.VITAL.Auto.Type.InitDefaultValues">
	<summary>
 Initialization par défaut avec les valeurs définies via Modeler
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Type.OnInitDefaultValues">
	<summary> Post-initialisation en fin d'appel du ou des constructeurs de classe. 
 Permet de surcharger les valeurs par défaut des propriétés.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Type.GetAll(Corail.Core.Transaction)">
	<summary>
 Retourne la requête retournant tous les élements.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
	<returns>Tous les éléments</returns>
</member><member name="M:VITAL.BO.VITAL.Auto.Type.FindDR(System.Int32,Corail.Core.Transaction)">
	<summary>
 Retourne la ligne de données correspondant à l'enregistrement.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Type.Load(System.Int32,Corail.Core.Transaction)">
	<summary>
 Chargement des informations à partir la table VTL_TYPE.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Type.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table VTL_TYPE.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Type.Save(Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_TYPE.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Type.Save(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_TYPE.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Type.Cancel(Corail.Core.Transaction)">
	<summary>
 Annule les changements apportés a l'objet
 </summary>
	<param name="p_o_trans">Transaction a utiliser</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Type.Delete(Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_TYPE.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Type.Delete(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_TYPE.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="F:VITAL.BO.VITAL.Auto.Type.m_o_cacheDt">
	<summary>
 Cache Datatable
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Type.m_o_cacheLock">
	<summary>
 Cache Lock
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Type.m_b_cacheHasChanges">
	<summary>
 Cache Changes
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.Type.CacheDt(Corail.Core.Transaction,System.Boolean)">
	<summary>
 Propriété du cache datatable
 </summary>
	<param name="p_o_trans">La transaction à utiliser</param>
	<param name="p_b_force">Objet de la classe Type.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Type.CacheDtKey(VITAL.BO.VITAL.Type)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
	<param name="p_o_object">Objet de la classe Type.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Type.CacheDtKeyFind(VITAL.BO.VITAL.Type)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Type.CacheUpdate(System.Boolean)">
	<summary>
 Permet mettre à jour le cache
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Type.CacheUpdateDt(System.Boolean)">
	<summary>
 Permet mettre à jour le cache datatable
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Type.CacheClear(System.Boolean)">
	<summary>
 Permet vider le cache datatable
 </summary>
	<param name="p_b_force">Indique si l'on force le vidage ou non</param>
</member><member name="T:VITAL.BO.VITAL.Auto.Type">
	<summary>
 Typede l'animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.User.m_b_update">
	<summary>
 Indique s'il s'agit d'un élément chargé à partir de la base de données.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.User.IsNew">
	<summary>
 Indique si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregistrement sera mis à jour.
 </summary>
	<value>
		<c>true</c> si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregestement sera mis à jour.
 </value>
</member><member name="M:VITAL.BO.VITAL.Auto.User.InitDefaultValues">
	<summary>
 Initialization par défaut avec les valeurs définies via Modeler
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.User.OnInitDefaultValues">
	<summary> Post-initialisation en fin d'appel du ou des constructeurs de classe. 
 Permet de surcharger les valeurs par défaut des propriétés.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.User.GetAll(Corail.Core.Transaction)">
	<summary>
 Retourne la requête retournant tous les élements.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
	<returns>Tous les éléments</returns>
</member><member name="M:VITAL.BO.VITAL.Auto.User.FindDR(System.Int32,Corail.Core.Transaction)">
	<summary>
 Retourne la ligne de données correspondant à l'enregistrement.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.User.Load(System.Int32,Corail.Core.Transaction)">
	<summary>
 Chargement des informations à partir la table VTL_USER.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.User.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table VTL_USER.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.User.Save(Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_USER.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.User.Save(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_USER.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.User.Cancel(Corail.Core.Transaction)">
	<summary>
 Annule les changements apportés a l'objet
 </summary>
	<param name="p_o_trans">Transaction a utiliser</param>
</member><member name="M:VITAL.BO.VITAL.Auto.User.Delete(Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_USER.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.User.Delete(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_USER.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="F:VITAL.BO.VITAL.Auto.User.m_o_cacheDt">
	<summary>
 Cache Datatable
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.User.m_o_cacheLock">
	<summary>
 Cache Lock
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.User.m_b_cacheHasChanges">
	<summary>
 Cache Changes
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.User.CacheDt(Corail.Core.Transaction,System.Boolean)">
	<summary>
 Propriété du cache datatable
 </summary>
	<param name="p_o_trans">La transaction à utiliser</param>
	<param name="p_b_force">Objet de la classe User.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.User.CacheDtKey(VITAL.BO.VITAL.User)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
	<param name="p_o_object">Objet de la classe User.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.User.CacheDtKeyFind(VITAL.BO.VITAL.User)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.User.CacheUpdate(System.Boolean)">
	<summary>
 Permet mettre à jour le cache
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.User.CacheUpdateDt(System.Boolean)">
	<summary>
 Permet mettre à jour le cache datatable
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.User.CacheClear(System.Boolean)">
	<summary>
 Permet vider le cache datatable
 </summary>
	<param name="p_b_force">Indique si l'on force le vidage ou non</param>
</member><member name="T:VITAL.BO.VITAL.Auto.User">
	<summary>
 User.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Vaccin.m_b_update">
	<summary>
 Indique s'il s'agit d'un élément chargé à partir de la base de données.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.Vaccin.IsNew">
	<summary>
 Indique si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregistrement sera mis à jour.
 </summary>
	<value>
		<c>true</c> si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregestement sera mis à jour.
 </value>
</member><member name="M:VITAL.BO.VITAL.Auto.Vaccin.InitDefaultValues">
	<summary>
 Initialization par défaut avec les valeurs définies via Modeler
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Vaccin.OnInitDefaultValues">
	<summary> Post-initialisation en fin d'appel du ou des constructeurs de classe. 
 Permet de surcharger les valeurs par défaut des propriétés.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Vaccin.GetAll(Corail.Core.Transaction)">
	<summary>
 Retourne la requête retournant tous les élements.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
	<returns>Tous les éléments</returns>
</member><member name="M:VITAL.BO.VITAL.Auto.Vaccin.FindDR(System.Int32,Corail.Core.Transaction)">
	<summary>
 Retourne la ligne de données correspondant à l'enregistrement.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Vaccin.Load(System.Int32,Corail.Core.Transaction)">
	<summary>
 Chargement des informations à partir la table VTL_VACCIN.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Vaccin.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table VTL_VACCIN.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Vaccin.Save(Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_VACCIN.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Vaccin.Save(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_VACCIN.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Vaccin.Cancel(Corail.Core.Transaction)">
	<summary>
 Annule les changements apportés a l'objet
 </summary>
	<param name="p_o_trans">Transaction a utiliser</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Vaccin.Delete(Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_VACCIN.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Vaccin.Delete(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_VACCIN.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="F:VITAL.BO.VITAL.Auto.Vaccin.m_o_cacheDt">
	<summary>
 Cache Datatable
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Vaccin.m_o_cacheLock">
	<summary>
 Cache Lock
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Vaccin.m_b_cacheHasChanges">
	<summary>
 Cache Changes
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.Vaccin.CacheDt(Corail.Core.Transaction,System.Boolean)">
	<summary>
 Propriété du cache datatable
 </summary>
	<param name="p_o_trans">La transaction à utiliser</param>
	<param name="p_b_force">Objet de la classe Vaccin.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Vaccin.CacheDtKey(VITAL.BO.VITAL.Vaccin)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
	<param name="p_o_object">Objet de la classe Vaccin.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Vaccin.CacheDtKeyFind(VITAL.BO.VITAL.Vaccin)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Vaccin.CacheUpdate(System.Boolean)">
	<summary>
 Permet mettre à jour le cache
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Vaccin.CacheUpdateDt(System.Boolean)">
	<summary>
 Permet mettre à jour le cache datatable
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Vaccin.CacheClear(System.Boolean)">
	<summary>
 Permet vider le cache datatable
 </summary>
	<param name="p_b_force">Indique si l'on force le vidage ou non</param>
</member><member name="T:VITAL.BO.VITAL.Auto.Vaccin">
	<summary>
 Vaccin.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Vaccination.m_b_update">
	<summary>
 Indique s'il s'agit d'un élément chargé à partir de la base de données.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.Vaccination.IsNew">
	<summary>
 Indique si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregistrement sera mis à jour.
 </summary>
	<value>
		<c>true</c> si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregestement sera mis à jour.
 </value>
</member><member name="M:VITAL.BO.VITAL.Auto.Vaccination.InitDefaultValues">
	<summary>
 Initialization par défaut avec les valeurs définies via Modeler
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Vaccination.OnInitDefaultValues">
	<summary> Post-initialisation en fin d'appel du ou des constructeurs de classe. 
 Permet de surcharger les valeurs par défaut des propriétés.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Vaccination.GetAll(Corail.Core.Transaction)">
	<summary>
 Retourne la requête retournant tous les élements.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
	<returns>Tous les éléments</returns>
</member><member name="M:VITAL.BO.VITAL.Auto.Vaccination.FindDR(System.Int32,Corail.Core.Transaction)">
	<summary>
 Retourne la ligne de données correspondant à l'enregistrement.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Vaccination.Load(System.Int32,Corail.Core.Transaction)">
	<summary>
 Chargement des informations à partir la table VTL_VACCINATION.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Vaccination.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table VTL_VACCINATION.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Vaccination.Save(Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_VACCINATION.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Vaccination.Save(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_VACCINATION.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Vaccination.Cancel(Corail.Core.Transaction)">
	<summary>
 Annule les changements apportés a l'objet
 </summary>
	<param name="p_o_trans">Transaction a utiliser</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Vaccination.Delete(Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_VACCINATION.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Vaccination.Delete(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_VACCINATION.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="F:VITAL.BO.VITAL.Auto.Vaccination.m_o_cacheDt">
	<summary>
 Cache Datatable
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Vaccination.m_o_cacheLock">
	<summary>
 Cache Lock
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Vaccination.m_b_cacheHasChanges">
	<summary>
 Cache Changes
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.Vaccination.CacheDt(Corail.Core.Transaction,System.Boolean)">
	<summary>
 Propriété du cache datatable
 </summary>
	<param name="p_o_trans">La transaction à utiliser</param>
	<param name="p_b_force">Objet de la classe Vaccination.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Vaccination.CacheDtKey(VITAL.BO.VITAL.Vaccination)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
	<param name="p_o_object">Objet de la classe Vaccination.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Vaccination.CacheDtKeyFind(VITAL.BO.VITAL.Vaccination)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Vaccination.CacheUpdate(System.Boolean)">
	<summary>
 Permet mettre à jour le cache
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Vaccination.CacheUpdateDt(System.Boolean)">
	<summary>
 Permet mettre à jour le cache datatable
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Vaccination.CacheClear(System.Boolean)">
	<summary>
 Permet vider le cache datatable
 </summary>
	<param name="p_b_force">Indique si l'on force le vidage ou non</param>
</member><member name="T:VITAL.BO.VITAL.Auto.Vaccination">
	<summary>
 Vaccination d'un animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Veterinaire.m_b_update">
	<summary>
 Indique s'il s'agit d'un élément chargé à partir de la base de données.
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.Veterinaire.IsNew">
	<summary>
 Indique si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregistrement sera mis à jour.
 </summary>
	<value>
		<c>true</c> si lors de l'appel à la méthode <c>Save</c>, un enregistrement devra être ajouté. Sinon l'enregestement sera mis à jour.
 </value>
</member><member name="M:VITAL.BO.VITAL.Auto.Veterinaire.InitDefaultValues">
	<summary>
 Initialization par défaut avec les valeurs définies via Modeler
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Veterinaire.OnInitDefaultValues">
	<summary> Post-initialisation en fin d'appel du ou des constructeurs de classe. 
 Permet de surcharger les valeurs par défaut des propriétés.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Veterinaire.GetAll(Corail.Core.Transaction)">
	<summary>
 Retourne la requête retournant tous les élements.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
	<returns>Tous les éléments</returns>
</member><member name="M:VITAL.BO.VITAL.Auto.Veterinaire.FindDR(System.Int32,Corail.Core.Transaction)">
	<summary>
 Retourne la ligne de données correspondant à l'enregistrement.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Veterinaire.Load(System.Int32,Corail.Core.Transaction)">
	<summary>
 Chargement des informations à partir la table VTL_VETERINAIRE.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Veterinaire.Load(System.Data.DataRow)">
	<summary>
 Chargement des informations à partir de la table VTL_VETERINAIRE.
 </summary>
	<param name="p_o_row">Enregistrement.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Veterinaire.Save(Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_VETERINAIRE.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Veterinaire.Save(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Enregistrer les informations dans la table VTL_VETERINAIRE.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Veterinaire.Cancel(Corail.Core.Transaction)">
	<summary>
 Annule les changements apportés a l'objet
 </summary>
	<param name="p_o_trans">Transaction a utiliser</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Veterinaire.Delete(Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_VETERINAIRE.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Veterinaire.Delete(System.Boolean,Corail.Core.Transaction)">
	<summary>
 Supprime l'enregistrement de la table VTL_VETERINAIRE.
 </summary>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="F:VITAL.BO.VITAL.Auto.Veterinaire.m_o_cacheDt">
	<summary>
 Cache Datatable
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Veterinaire.m_o_cacheLock">
	<summary>
 Cache Lock
 </summary>
</member><member name="F:VITAL.BO.VITAL.Auto.Veterinaire.m_b_cacheHasChanges">
	<summary>
 Cache Changes
 </summary>
</member><member name="P:VITAL.BO.VITAL.Auto.Veterinaire.CacheDt(Corail.Core.Transaction,System.Boolean)">
	<summary>
 Propriété du cache datatable
 </summary>
	<param name="p_o_trans">La transaction à utiliser</param>
	<param name="p_b_force">Objet de la classe Veterinaire.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Veterinaire.CacheDtKey(VITAL.BO.VITAL.Veterinaire)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
	<param name="p_o_object">Objet de la classe Veterinaire.</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Veterinaire.CacheDtKeyFind(VITAL.BO.VITAL.Veterinaire)">
	<summary>
 Permet de constuire le select représentant la clé primaire pour le cache datatable
 </summary>
</member><member name="M:VITAL.BO.VITAL.Auto.Veterinaire.CacheUpdate(System.Boolean)">
	<summary>
 Permet mettre à jour le cache
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Veterinaire.CacheUpdateDt(System.Boolean)">
	<summary>
 Permet mettre à jour le cache datatable
 </summary>
	<param name="p_b_delete">Indique si l'on vient du delete d'un objet ou non</param>
</member><member name="M:VITAL.BO.VITAL.Auto.Veterinaire.CacheClear(System.Boolean)">
	<summary>
 Permet vider le cache datatable
 </summary>
	<param name="p_b_force">Indique si l'on force le vidage ou non</param>
</member><member name="T:VITAL.BO.VITAL.Auto.Veterinaire">
	<summary>
 Veterinaire.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Tables.VTL_ADOPTER">
	<summary>
 Adopter : Associations etre propriétaire et animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Tables.VTL_ANIMAL">
	<summary>
 Animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Tables.VTL_ASSURANCE">
	<summary>
 Assurance.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Tables.VTL_CARTE">
	<summary>
 Carte vitale.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Tables.VTL_CONSULTATION">
	<summary>
 Consultation vétérinaire d'un animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Tables.VTL_CONTRAT">
	<summary>
 Contrat d'assurance.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Tables.VTL_HISTO_POIDS">
	<summary>
 Historique du poids de l'animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Tables.VTL_HISTO_TAILLE">
	<summary>
 Historique de la taille de l'animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Tables.VTL_MEDICAMENT">
	<summary>
 Medicament.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Tables.VTL_POSITION">
	<summary>
 Position de l'animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Tables.VTL_PROPRIETAIRE">
	<summary>
 Propriétaire.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Tables.VTL_RACE">
	<summary>
 Race de l'animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Tables.VTL_TRAITEMENT_MEDICAMENT">
	<summary>
 Liste des médicaments compris dans un traitement.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Tables.VTL_TRAITREMENT">
	<summary>
 Traitrement.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Tables.VTL_TYPE">
	<summary>
 Typede l'animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Tables.VTL_USER">
	<summary>
 User.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Tables.VTL_VACCIN">
	<summary>
 Vaccin.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Tables.VTL_VACCINATION">
	<summary>
 Vaccination d'un animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Tables.VTL_VETERINAIRE">
	<summary>
 Veterinaire.
 </summary>
</member><member name="T:VITAL.BO.VITAL.Tables">
	<summary>
 Tables du schéma VITAL.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_ADOPTER.VTL_ADOPTER_ID">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_ADOPTER.VTL_ADOPTER_DT_DEBUT">
	<summary>
 Dt_debut.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_ADOPTER.VTL_ADOPTER_DT_FIN">
	<summary>
 Dt_fin.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_ADOPTER.VTL_ADOPTER_ID_PROPRIETAIRE">
	<summary>
 Id_proprietaire.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_ADOPTER.VTL_ADOPTER_ID_ANIMAL">
	<summary>
 Id_animal.
 </summary>
</member><member name="T:VITAL.BO.VITAL.VTL_ADOPTER">
	<summary>
 Adopter : Associations etre propriétaire et animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_ANIMAL.VTL_ANIMAL_ID">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_ANIMAL.VTL_ANIMAL_NOM">
	<summary>
 Nom.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_ANIMAL.VTL_ANIMAL_NUM_PUCE">
	<summary>
 Num_puce.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_ANIMAL.VTL_ANIMAL_DT_NAISSANCE">
	<summary>
 Dt_naissance.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_ANIMAL.VTL_ANIMAL_DT_DECES">
	<summary>
 Dt_deces.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_ANIMAL.VTL_ANIMAL_ID_RACE">
	<summary>
 Id_race.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_ANIMAL.VTL_ANIMAL_ID_CARTE">
	<summary>
 Id_carte.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_ANIMAL.VTL_ANIMAL_ID_TYPE">
	<summary>
 Id_type.
 </summary>
</member><member name="T:VITAL.BO.VITAL.VTL_ANIMAL">
	<summary>
 Animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_ASSURANCE.VTL_ASSURANCE_ID">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_ASSURANCE.VTL_ASSURANCE_NOM">
	<summary>
 Nom.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_ASSURANCE.VTL_ASSURANCE_SIRET">
	<summary>
 Siret.
 </summary>
</member><member name="T:VITAL.BO.VITAL.VTL_ASSURANCE">
	<summary>
 Assurance.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_CARTE.VTL_CARTE_ID">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_CARTE.VTL_CARTE_NUMERO">
	<summary>
 Numero.
 </summary>
</member><member name="T:VITAL.BO.VITAL.VTL_CARTE">
	<summary>
 Carte vitale.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_CONSULTATION.VTL_CONSULTATION_ID">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_CONSULTATION.VTL_CONSULTATION_DT_CONSULTATION">
	<summary>
 Dt_consultation.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_CONSULTATION.VTL_CONSULTATION_MONTANT">
	<summary>
 Montant.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_CONSULTATION.VTL_CONSULTATION_COMMENTAIRE">
	<summary>
 Commentaire.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_CONSULTATION.VTL_CONSULTATION_ID_VETERINAIRE">
	<summary>
 Id_veterinaire.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_CONSULTATION.VTL_CONSULTATION_L">
	<summary>
 Id_animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_CONSULTATION.VTL_CONSULTATION_ID_PROPRIETAIRE">
	<summary>
 Id_proprietaire.
 </summary>
</member><member name="T:VITAL.BO.VITAL.VTL_CONSULTATION">
	<summary>
 Consultation vétérinaire d'un animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_CONTRAT.VTL_CONTRAT_ID">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_CONTRAT.VTL_CONTRAT_NUM_CONTRAT">
	<summary>
 Num_contrat.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_CONTRAT.VTL_CONTRAT_DT_DEBUT">
	<summary>
 Dt_debut.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_CONTRAT.VTL_CONTRAT_DT_FIN">
	<summary>
 Dt_fin.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_CONTRAT.VTL_CONTRAT_ID_ANIMAL">
	<summary>
 Id_animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_CONTRAT.VTL_CONTRAT_ID_PROPRIETAIRE">
	<summary>
 Id_proprietaire.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_CONTRAT.VTL_CONTRAT_ID_ASSURANCE">
	<summary>
 Id_assurance.
 </summary>
</member><member name="T:VITAL.BO.VITAL.VTL_CONTRAT">
	<summary>
 Contrat d'assurance.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_HISTO_POIDS.VTL_HISTO_POIDS_ID">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_HISTO_POIDS.VTL_HISTO_POIDS_DT_HISTO">
	<summary>
 Dt_histo.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_HISTO_POIDS.VTL_HISTO_POIDS_POIDS">
	<summary>
 Poids.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_HISTO_POIDS.VTL_HISTO_POIDS_ID_ANIMAL">
	<summary>
 Id_animal.
 </summary>
</member><member name="T:VITAL.BO.VITAL.VTL_HISTO_POIDS">
	<summary>
 Historique du poids de l'animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_HISTO_TAILLE.VTL_HISTO_TAILLE_ID">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_HISTO_TAILLE.VTL_HISTO_TAILLE_DT_HISTO">
	<summary>
 Dt_histo.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_HISTO_TAILLE.VTL_HISTO_TAILLE_TAILLE">
	<summary>
 Taille.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_HISTO_TAILLE.VTL_HISTO_TAILLE_ID_ANIMAL">
	<summary>
 Id_animal.
 </summary>
</member><member name="T:VITAL.BO.VITAL.VTL_HISTO_TAILLE">
	<summary>
 Historique de la taille de l'animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_MEDICAMENT.VTL_MEDICAMENT_ID">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_MEDICAMENT.VTL_MEDICAMENT_LIBELLE">
	<summary>
 Libelle.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_MEDICAMENT.VTL_MEDICAMENT_DOSAGE">
	<summary>
 Dosage.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_MEDICAMENT.VTL_MEDICAMENT_DUREE_MOYENNE_JOUR">
	<summary>
 Duree_moyenne_jour.
 </summary>
</member><member name="T:VITAL.BO.VITAL.VTL_MEDICAMENT">
	<summary>
 Medicament.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_POSITION.VTL_POSITION_ID">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_POSITION.VTL_POSITION_DT_POSITION">
	<summary>
 Dt_position.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_POSITION.VTL_POSITION_COORD_LAT">
	<summary>
 Coord_lat.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_POSITION.VTL_POSITION_COORD_LONG">
	<summary>
 Coord_long.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_POSITION.VTL_POSITION_TOP_COURANTE">
	<summary>
 Top_courante.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_POSITION.VTL_POSITION_ID_ANIMAL">
	<summary>
 Id_animal.
 </summary>
</member><member name="T:VITAL.BO.VITAL.VTL_POSITION">
	<summary>
 Position de l'animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_PROPRIETAIRE.VTL_PROPRIETAIRE_ID">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_PROPRIETAIRE.VTL_PROPRIETAIRE_NOM">
	<summary>
 Nom.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_PROPRIETAIRE.VTL_PROPRIETAIRE_PRENOM">
	<summary>
 Prenom.
 </summary>
</member><member name="T:VITAL.BO.VITAL.VTL_PROPRIETAIRE">
	<summary>
 Propriétaire.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_RACE.VTL_RACE_ID">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_RACE.VTL_RACE_NOM">
	<summary>
 Nom.
 </summary>
</member><member name="T:VITAL.BO.VITAL.VTL_RACE">
	<summary>
 Race de l'animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_TRAITEMENT_MEDICAMENT.VTL_TRAITEMENT_MEDICAMENT_ID">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_TRAITEMENT_MEDICAMENT.VTL_TRAITEMENT_MEDICAMENT_ID_TRAITEMENT">
	<summary>
 Id_traitement.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_TRAITEMENT_MEDICAMENT.VTL_TRAITEMENT_MEDICAMENT_ID_MEDICAMENT">
	<summary>
 Id_medicament.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_TRAITEMENT_MEDICAMENT.VTL_TRAITEMENT_MEDICAMENT_POSOLOGIE">
	<summary>
 Posologie.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_TRAITEMENT_MEDICAMENT.VTL_TRAITEMENT_MEDICAMENT_DUREE_JOUR">
	<summary>
 Duree_jour.
 </summary>
</member><member name="T:VITAL.BO.VITAL.VTL_TRAITEMENT_MEDICAMENT">
	<summary>
 Liste des médicaments compris dans un traitement.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_TRAITREMENT.VTL_TRAITREMENT_ID">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_TRAITREMENT.VTL_TRAITREMENT_DUREE_JOUR">
	<summary>
 Duree_jour.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_TRAITREMENT.VTL_TRAITREMENT_DT_DEBUT">
	<summary>
 Dt_debut.
 </summary>
</member><member name="T:VITAL.BO.VITAL.VTL_TRAITREMENT">
	<summary>
 Traitrement.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_TYPE.VTL_TYPE_ID">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_TYPE.VTL_TYPE_LIBELLE">
	<summary>
 Libelle.
 </summary>
</member><member name="T:VITAL.BO.VITAL.VTL_TYPE">
	<summary>
 Typede l'animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_USER.VTL_USER_ID">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_USER.VTL_USER_LOGIN">
	<summary>
 Login.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_USER.VTL_USER_MDP">
	<summary>
 Mdp.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_USER.VTL_USER_ROLE">
	<summary>
 Role.
 </summary>
</member><member name="T:VITAL.BO.VITAL.VTL_USER">
	<summary>
 User.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_VACCIN.VTL_VACCIN_ID">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_VACCIN.VTL_VACCIN_LIBELLE">
	<summary>
 Libelle.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_VACCIN.VTL_VACCIN_TOP_PERIODIQUE">
	<summary>
 Top_periodique.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_VACCIN.VTL_VACCIN_PERIODE_MOIS">
	<summary>
 Periode_mois.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_VACCIN.VTL_VACCIN_TOP_RECOMMANDATION">
	<summary>
 Top_recommandation.
 </summary>
</member><member name="T:VITAL.BO.VITAL.VTL_VACCIN">
	<summary>
 Vaccin.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_VACCINATION.VTL_VACCINATION_ID">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_VACCINATION.VTL_VACCINATION_ID_ANIMAL">
	<summary>
 Id_animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_VACCINATION.VTL_VACCINATION_ID_VACCIN">
	<summary>
 Id_vaccin.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_VACCINATION.VTL_VACCINATION_DT_VACCIN">
	<summary>
 Dt_vaccin.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_VACCINATION.VTL_VACCINATION_ID_CONSULTATION">
	<summary>
 Id_consultation.
 </summary>
</member><member name="T:VITAL.BO.VITAL.VTL_VACCINATION">
	<summary>
 Vaccination d'un animal.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_VETERINAIRE.VTL_VETERINAIRE_ID">
	<summary>
 ID.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_VETERINAIRE.VTL_VETERINAIRE_NOM">
	<summary>
 Nom.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_VETERINAIRE.VTL_VETERINAIRE_PRENOM">
	<summary>
 Prenom.
 </summary>
</member><member name="F:VITAL.BO.VITAL.VTL_VETERINAIRE.VTL_VETERINAIRE_SIRET">
	<summary>
 SIRET.
 </summary>
</member><member name="T:VITAL.BO.VITAL.VTL_VETERINAIRE">
	<summary>
 Veterinaire.
 </summary>
</member><member name="F:VITAL.BO.VITAL.Schema.m_o_db">
	<summary>
 Base de donnée liée à "VITAL".
 </summary>
</member><member name="P:VITAL.BO.VITAL.Schema.DB">
	<summary>
 Base de donnée liée à "VITAL".
 </summary>
	<value> Base de donnée liée.</value>
</member><member name="M:VITAL.BO.VITAL.Schema.NullIfValue(System.Int64,System.Int64)">
	<summary>
 Retourne la valeur à utiliser dans la requête.
 </summary>
	<param name="p_l_value">Valeur que l'on souhaite enregistrer.</param>
	<param name="p_l_null">Valeur étant remplacée par NULL.</param>
	<returns>La valeur à utiliser dans la requête.</returns>
</member><member name="M:VITAL.BO.VITAL.Schema.NullIfValue(System.Double,System.Double)">
	<summary>
 Retourne la valeur à utiliser dans la requête.
 </summary>
	<param name="p_r_value">Valeur que l'on souhaite enregistrer.</param>
	<param name="p_r_null">Valeur étant remplacée par NULL.</param>
	<returns>La valeur à utiliser dans la requête.</returns>
</member><member name="M:VITAL.BO.VITAL.Schema.TextSQLEmpty(System.String)">
	<summary>
 Met des quotes autour de la chaine de texte.
 </summary>
	<param name="p_s">Texte.</param>
	<returns>La valeur à utiliser dans la requête.</returns>
</member><member name="M:VITAL.BO.VITAL.Schema.ClearAllCache(System.Boolean)">
	<summary>
 Permet de nettoyer tous les caches
 </summary>
	<param name="p_b_force">Indique si l'on force le vidage ou non</param>
</member><member name="M:VITAL.BO.VITAL.Schema.SetDB(Corail.Core.DataBase)">
	<summary>
 On conserve la référence vers la base de données.
 </summary>
	<param name="p_o_db">Base de données.</param>
	<returns>Base de données source.</returns>
</member><member name="M:VITAL.BO.VITAL.Schema.TransactionCancelled(Corail.Core.DataBase)">
	<summary>
 Une transaction a été annulée dans la base de données.
 </summary>
	<param name="p_o_db">Base de données.</param>
</member><member name="M:VITAL.BO.VITAL.Adopter.#ctor(System.Int32,Corail.Core.Transaction)">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.Adopter"/>.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Adopter.#ctor">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.Adopter"/>.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Animal.#ctor(System.Int32,Corail.Core.Transaction)">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.Animal"/>.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Animal.#ctor">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.Animal"/>.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Assurance.#ctor(System.Int32,Corail.Core.Transaction)">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.Assurance"/>.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Assurance.#ctor">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.Assurance"/>.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Carte.#ctor(System.Int32,Corail.Core.Transaction)">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.Carte"/>.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Carte.#ctor">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.Carte"/>.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Consultation.#ctor(System.Int32,Corail.Core.Transaction)">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.Consultation"/>.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Consultation.#ctor">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.Consultation"/>.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Contrat.#ctor(System.Int32,Corail.Core.Transaction)">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.Contrat"/>.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Contrat.#ctor">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.Contrat"/>.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Histo_Poids.#ctor(System.Int32,Corail.Core.Transaction)">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.Histo_Poids"/>.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Histo_Poids.#ctor">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.Histo_Poids"/>.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Histo_Taille.#ctor(System.Int32,Corail.Core.Transaction)">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.Histo_Taille"/>.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Histo_Taille.#ctor">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.Histo_Taille"/>.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Medicament.#ctor(System.Int32,Corail.Core.Transaction)">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.Medicament"/>.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Medicament.#ctor">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.Medicament"/>.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Position.#ctor(System.Int32,Corail.Core.Transaction)">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.Position"/>.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Position.#ctor">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.Position"/>.
 </summary>
</member><member name="M:VITAL.BO.VITAL.PropriEtaire.#ctor(System.Int32,Corail.Core.Transaction)">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.PropriEtaire"/>.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.PropriEtaire.#ctor">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.PropriEtaire"/>.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Race.#ctor(System.Int32,Corail.Core.Transaction)">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.Race"/>.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Race.#ctor">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.Race"/>.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Traitement_medicament.#ctor(System.Int32,Corail.Core.Transaction)">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.Traitement_medicament"/>.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Traitement_medicament.#ctor">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.Traitement_medicament"/>.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Traitrement.#ctor(System.Int32,Corail.Core.Transaction)">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.Traitrement"/>.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Traitrement.#ctor">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.Traitrement"/>.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Type.#ctor(System.Int32,Corail.Core.Transaction)">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.Type"/>.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Type.#ctor">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.Type"/>.
 </summary>
</member><member name="M:VITAL.BO.VITAL.User.#ctor(System.Int32,Corail.Core.Transaction)">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.User"/>.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.User.#ctor">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.User"/>.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Vaccin.#ctor(System.Int32,Corail.Core.Transaction)">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.Vaccin"/>.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Vaccin.#ctor">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.Vaccin"/>.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Vaccination.#ctor(System.Int32,Corail.Core.Transaction)">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.Vaccination"/>.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Vaccination.#ctor">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.Vaccination"/>.
 </summary>
</member><member name="M:VITAL.BO.VITAL.Veterinaire.#ctor(System.Int32,Corail.Core.Transaction)">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.Veterinaire"/>.
 </summary>
	<param name="p_i_iD">ID.</param>
	<param name="p_o_trans">Transaction à utiliser.</param>
</member><member name="M:VITAL.BO.VITAL.Veterinaire.#ctor">
	<summary>
 Initialise une nouvelle instance de la classe <see cref="T:VITAL.BO.VITAL.Veterinaire"/>.
 </summary>
</member><member name="T:VITAL.BO.VITAL.Race">
	<summary>
 Race de l'animal.
 </summary>
</member><member name="T:VITAL.BO.VITAL.Traitement_medicament">
	<summary>
 Liste des médicaments compris dans un traitement.
 </summary>
</member><member name="M:VITAL.BO.Main.InitDatabases(Corail.Core.DataBaseList)">
	<summary>
 Vous devez initialiser içi la liste des bases de données accessibles depuis
 l'application
 </summary>
	<param name="p_o_list">Liste de bases de données</param>
</member><member name="M:VITAL.BO.VITAL.Animal.GetThisAnimal">
	<summary>
 Retourne l'id de l'animal - Accessible depuis 1 objet de la classe : p_o_animal.GetThisAnimal2().
 </summary>
	<returns>L'id de l'animal - Accessible depuis 1 objet de la classe : p_o_animal.GetThisAnimal2().
 </returns>
</member><member name="M:VITAL.BO.VITAL.Animal.GetThisAnimal2(System.String)">
	<summary>
 Retourne l'id de l'animal - Accessible sans objet de la classe : Animal.GetThisAnimal2("Rex").
 </summary>
	<param name="p_s_name">Nom de l'animal.</param>
	<returns>L'id de l'animal - Accessible sans objet de la classe : Animal.GetThisAnimal2("Rex").
 </returns>
</member><member name="T:VITAL.BO.VITAL.Animal">
	<summary>
 Animal.
 </summary>
</member>
</members>
</doc>